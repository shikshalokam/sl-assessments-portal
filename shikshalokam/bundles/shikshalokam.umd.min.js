!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("rxjs"),require("rxjs/operators"),require("@angular/material/select"),require("@angular/common/http"),require("@angular/material/dialog"),require("@angular/material/button"),require("@angular/material/progress-spinner"),require("@angular/material/snack-bar"),require("ngx-spinner"),require("@angular/cdk/keycodes"),require("@angular/router"),require("@angular/forms"),require("jspdf"),require("html2canvas"),require("@angular/core"),require("angular-google-charts"),require("@angular/material/icon"),require("@angular/material"),require("@angular/common")):"function"==typeof define&&define.amd?define("shikshalokam",["exports","rxjs","rxjs/operators","@angular/material/select","@angular/common/http","@angular/material/dialog","@angular/material/button","@angular/material/progress-spinner","@angular/material/snack-bar","ngx-spinner","@angular/cdk/keycodes","@angular/router","@angular/forms","jspdf","html2canvas","@angular/core","angular-google-charts","@angular/material/icon","@angular/material","@angular/common"],e):e(t.shikshalokam={},t.rxjs,t.rxjs.operators,t.ng.material.select,t.ng.common.http,t.ng.material.dialog,t.ng.material.button,t.ng.material["progress-spinner"],t.ng.material["snack-bar"],t.i2,t.ng.cdk.keycodes,t.ng.router,t.ng.forms,t.jspdf,t.html2canvas,t.ng.core,t.angularGoogleCharts,t.ng.material.icon,t.ng.material,t.ng.common)}(this,function(t,e,n,a,i,r,o,s,l,p,c,d,u,g,m,h,f,b,y,v){"use strict";function P(t){var e="function"==typeof Symbol&&t[Symbol.iterator],n=0;return e?e.call(t):{next:function(){return t&&n>=t.length&&(t=void 0),{value:t&&t[n++],done:!t}}}}m=m&&m.hasOwnProperty("default")?m["default"]:m;var x=function(){function t(){this.prefixedBreadcrumbs=[],this.breadcrumbs=[],this.breadcrumbsSource=new e.Subject,this.breadcrumbsChanged$=this.breadcrumbsSource.asObservable(),null!=localStorage.getItem("prefixedBreadcrumbs")&&(this.prefixedBreadcrumbs=JSON.parse(localStorage.getItem("prefixedBreadcrumbs")))}return t.prototype.store=function(t){this.breadcrumbs=t;var e=this.prefixedBreadcrumbs.concat(this.breadcrumbs);this.breadcrumbsSource.next(e)},t.prototype.storePrefixed=function(t){this.storeIfUnique(t),localStorage.setItem("prefixedBreadcrumbs",JSON.stringify(this.prefixedBreadcrumbs));var e=this.prefixedBreadcrumbs.concat(this.breadcrumbs);this.breadcrumbsSource.next(e)},t.prototype.get=function(){return this.breadcrumbsChanged$},t.prototype.storeIfUnique=function(t){var e,n,a=!0;try{for(var i=P(this.prefixedBreadcrumbs),r=i.next();!r.done;r=i.next()){var o=r.value;if(t.url==o.url){a=!1;break}}}catch(s){e={error:s}}finally{try{r&&!r.done&&(n=i["return"])&&n.call(i)}finally{if(e)throw e.error}}a&&this.prefixedBreadcrumbs.push(t)},t.decorators=[{type:h.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[]},t.ngInjectableDef=h.defineInjectable({factory:function(){return new t},token:t,providedIn:"root"}),t}(),I=function(){function t(t,e,n){this.location=t,this.spinner=e,this._formBuilder=n}return t.prototype.onBack=function(){this.location.back()},t.prototype.loaderShow=function(){this.spinner.show()},t.prototype.loaderHide=function(){this.spinner.hide()},t.prototype.toGroup=function(t){var e=this,n={};return t.forEach(function(t){"array"==t.input?n[t.field]=e.createFormArray(t):n[t.field]=t.validation.required?new u.FormControl({value:t.value||"",disabled:!t.editable},u.Validators.required):new u.FormControl({value:t.value||"",disabled:!t.editable})}),new u.FormGroup(n)},t.prototype.createFormArray=function(t){var e=[];return t.array.forEach(function(t){e[t.field]=t.validation.required?new u.FormControl({value:t.value||"",disabled:!t.editable},u.Validators.required):new u.FormControl({value:t.value||"",disabled:!t.editable})}),new u.FormArray(e)},t.prototype.createControl=function(t){var i=this;return this.objectForm=this._formBuilder.group({}),t.forEach(function(t){var n,a=t.field;"array"===t.input?(n=new u.FormArray([]),t.value.forEach(function(t){var e;n.push(i._formBuilder.group(((e={})[a]=[t||"",u.Validators.required],e)))})):n=new u.FormControl(t.value?t.value:"",t.validation.required?u.Validators.required:null),i.objectForm.addControl(t.field,n)}),this.objectForm},t.prototype.uploadFile=function(t){var n=this;return this.objectForm=this._formBuilder.group({}),t.forEach(function(t){var e;t.field;"file"===t.input&&(e=new u.FormControl(t.value?t.value:null,[t.validation.required?u.Validators.required:null])),n.objectForm.addControl(t.field,e)}),console.log(this.objectForm),this.objectForm},t.decorators=[{type:h.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:v.Location},{type:p.NgxSpinnerService},{type:u.FormBuilder}]},t.ngInjectableDef=h.defineInjectable({factory:function(){return new t(h.inject(v.Location),h.inject(p.NgxSpinnerService),h.inject(u.FormBuilder))},token:t,providedIn:"root"}),t}(),w=function(){function t(t,e,n,a){var i=this;this.breadcrumbService=t,this.utilityService=e,this.activatedRoute=n,this.router=a,this.ROUTE_DATA_BREADCRUMB="breadcrumb",this.ROUTE_PARAM_BREADCRUMB="breadcrumb",this.PREFIX_BREADCRUMB="prefixBreadcrumb",t.get().subscribe(function(t){i.breadcrumbs=t})}return t.prototype.hasParams=function(t){return Object.keys(t.params).length?[t.url,t.params]:[t.url]},t.prototype.onBack=function(){this.utilityService.onBack()},t.prototype.ngOnInit=function(){var e=this;this.router.navigated&&this.generateBreadcrumbTrail(),this.router.events.pipe(n.filter(function(t){return t instanceof d.NavigationEnd})).subscribe(function(t){e.generateBreadcrumbTrail()})},t.prototype.generateBreadcrumbTrail=function(){var o=this;this.currentBreadcrumbs=[];for(var s=this.activatedRoute.root,l="",t=function(){var t=s.children,r="";t.forEach(function(t){if((s=t).outlet===d.PRIMARY_OUTLET){var e=t.routeConfig&&t.routeConfig.data,n=t.snapshot.params.hasOwnProperty(o.ROUTE_PARAM_BREADCRUMB);if(e||n){n?r=t.snapshot.params[o.ROUTE_PARAM_BREADCRUMB].replace(/_/g," "):t.snapshot.data.hasOwnProperty(o.ROUTE_DATA_BREADCRUMB)&&(r=t.snapshot.data[o.ROUTE_DATA_BREADCRUMB]);var a=t.snapshot.url.map(function(t){return t.path}).join("/");l+="/"+a,0===a.length&&(t.snapshot.params={});var i={label:r,params:t.snapshot.params,url:l};t.snapshot.data.hasOwnProperty(o.PREFIX_BREADCRUMB)?o.breadcrumbService.storePrefixed(i):o.currentBreadcrumbs.push(i)}}}),e.breadcrumbService.store(e.currentBreadcrumbs)},e=this;0<s.children.length;)t()},t.decorators=[{type:h.Component,args:[{selector:"breadcrumb",template:'<div class="breadcrumbBox" >\n    <ol class="_flex-box orderedList">\n            <button  *ngIf="!showControl" class="noPadding" mat-button (click)="onBack()"><i class="material-icons">\n                    keyboard_arrow_left\n                  </i>\n                  <span>Back</span>\n                </button>\n        <li *ngFor="let breadcrumb of breadcrumbs; let last = last" class="padding breadcrumbList">\n            <span *ngIf="breadcrumb.label !=\'\'">\n\n                <a *ngIf=" breadcrumb == breadcrumbs[startIndex] " [routerLink]="hasParams(breadcrumb)" class="_flex-box breadcrumbLink">\n                            {{breadcrumb.label | translate}}\n                </a>\n             \n\n                <a *ngIf="(!last) &&( breadcrumb != breadcrumbs[startIndex])" [routerLink]="hasParams(breadcrumb)" class="_flex-box breadcrumbLink">\n                    \n                    <i class="material-icons">\n                        keyboard_arrow_right\n                    </i>\n                    {{breadcrumb.label | translate}} \n                   \n                </a>\n                <span class="last _flex-box " *ngIf="last" [routerLink]="hasParams(breadcrumb)">\n                        <i class="material-icons">\n                                keyboard_arrow_right\n                            </i>\n                    {{ breadcrumb.label | translate }} \n                </span>\n            </span>\n        </li>\n    </ol>\n</div>',encapsulation:h.ViewEncapsulation.None,styles:[".fluid-bread{background-color:#fff}.breadcrumb{background-color:#fff;padding:4px;margin-bottom:0}.padding{padding:0 5px}.orderedList{padding:0;list-style:none;margin:0}.breadcrumbList{color:var(--dark-blue-color)}.breadcrumbList .breadcrumbLink{color:var(--dark-blue-color);text-decoration:none;font-size:18px}.breadcrumbList .breadcrumbLink:hover{text-decoration:none;font-weight:700}.breadcrumbList .last{font-weight:bolder;font-size:18px}"]}]}],t.ctorParameters=function(){return[{type:x},{type:I},{type:d.ActivatedRoute},{type:d.Router}]},t.propDecorators={addClass:[{type:h.Input}],showControl:[{type:h.Input}],startIndex:[{type:h.Input}]},t}(),k=function(){function t(t){this.snackBar=t,this.canAcess=localStorage.getItem("canAcess"),this.sendNavigationLink=new h.EventEmitter}return t.prototype.ngOnInit=function(){},t.prototype.navigateLink=function(t){this.sendNavigationLink.emit(t)},t.prototype.showMessage=function(){this.snackBar.open("Comming Soon.","Ok",{duration:9e3})},t.decorators=[{type:h.Component,args:[{selector:"dashboard-blocks",template:'\n<div class="_flex-box _justify-content-center wrapper">\n\n  <div class="_full-width ">\n    <div *ngFor="let dashBoard of list" >\n      <div class=" col-lg-3 col-md-4 col-sm-6 col-xs-12 margin-top _justify-content-center flex-box"  title="{{dashBoard.tooltip|translate}}" *ngIf="canAcess.includes(dashBoard.id)"  (click)="dashBoard?.disabled ?  navigateLink(dashBoard.anchorLink) : showMessage()">\n        <div class=" box iconBox">\n          <i class="material-icons folderIcon">\n           {{dashBoard.icon}}\n          </i>\n        </div>\n        <div class=" box ">\n          <div class="description">\n              {{dashBoard.tooltip|translate}}\n          </div>\n          \n        </div>\n      </div>\n\n\n    </div>\n  </div>\n</div>',styles:[".flex-box{display:flex;flex-direction:column;justify-content:center;align-items:center;cursor:pointer}.description{color:var(--grey-color);text-overflow:ellipsis;overflow:hidden;width:110px;text-align:center}.dashBoardIcon{width:200px;height:200px;display:flex;flex-direction:column;justify-content:center;align-items:center;cursor:pointer;border-radius:20px;margin:0 20px}.margin-top{margin-top:20px}.folderIcon{font-size:70px;color:var(--blue-gradient-color);display:flex;align-items:center}.wrapper{padding:0 20px}.box{width:100%;display:flex;justify-content:center}.iconBox{background-image:linear-gradient(to top,#e8eced 10%,#fff 90%);height:120px;width:120px;border:1px solid var(--grey-color);border-radius:15px}"]}]}],t.ctorParameters=function(){return[{type:y.MatSnackBar}]},t.propDecorators={list:[{type:h.Input}],sendNavigationLink:[{type:h.Output}]},t}(),D=function(){function t(t,e){this.dialogRef=t,this.data=e}return t.prototype.ngOnInit=function(){},t.prototype.onCancel=function(){this.dialogRef.close()},t.decorators=[{type:h.Component,args:[{selector:"app-dialog-box",template:'<h1 mat-dialog-title>{{\'message.alertHeading\' | translate}}</h1>\n<div mat-dialog-content>\n  <p>{{\'message.alertMessage\' | translate}}</p>\n</div>\n<div mat-dialog-actions class="alingCenterline" >\n  <button mat-button  class="margin" (click)="onCancel()">{{\'buttons.cancel\' | translate }}</button>\n  <button mat-button class="btnColor margin"   [mat-dialog-close] = "true"   >{{\'buttons.complete\' | translate}}</button>\n</div>\n',styles:[".btnColor{background-color:var(--primary-color);color:var(--white-color)}.alingCenterline{display:flex;align-items:center;justify-content:flex-end}.margin{margin:15px 0 0 10px}"]}]}],t.ctorParameters=function(){return[{type:y.MatDialogRef},{type:undefined,decorators:[{type:h.Inject,args:[y.MAT_DIALOG_DATA]}]}]},t}(),C=function(){function t(){this.emitResponseType=new h.EventEmitter}return t.prototype.ngOnInit=function(){},t.prototype.changeResponseType=function(t){this.emitResponseType.emit(t)},t.decorators=[{type:h.Component,args:[{selector:"app-dropdown-field",template:'<div [formGroup]="genericForm" >\n  <mat-form-field class=" col-sm-6 fixSize _halfWidth" *ngIf="genericData.input == \'radio\' ||genericData.input == \'dropdown\' ||genericData.input == \'select\' ">\n    <mat-select [disabled]="!genericData.editable"  placeholder="{{genericData.label | camelcase}} "  formControlName="{{genericData.field}}" [required]="genericData.validation.required" >\n        <mat-option *ngFor="let opt of genericData.options" [value]="opt.value" (click)="changeResponseType(opt.value)" >\n          {{opt.label}} \n        </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <mat-form-field class=" col-sm-6 fixSize _halfWidth"  *ngIf="genericData.input == \'multiselect\' ">\n      <mat-select [disabled]="!genericData.editable"  placeholder="{{genericData.label | camelcase}} "  formControlName="{{genericData.field}}" required multiple >\n          <mat-option *ngFor="let opt of genericData.options" [value]="opt.value" (click)="changeResponseType">\n            {{opt.label}} \n          </mat-option>\n      </mat-select>\n    </mat-form-field>\n</div>',styles:[".space{padding:0 10px}.bold{font-size:15px;font-weight:1000}.right{text-align:right}.fixSize{height:54.6px}"]}]}],t.ctorParameters=function(){return[]},t.propDecorators={genericData:[{type:h.Input}],genericForm:[{type:h.Input}],genericEdit:[{type:h.Input}],emitResponseType:[{type:h.Output}]},t}(),_=function(){function t(){this.editnewquestion=new h.EventEmitter}return t.prototype.ngOnInit=function(){},t.prototype.changeResponseType=function(t,e){this.genericData[e].value=t},t.prototype.editquestion=function(t){this.editnewquestion.emit(t)},t.decorators=[{type:h.Component,args:[{selector:"app-dynamic-form",template:'<div class="col-sm-12 " [formGroup]= "genericForm"  *ngIf=" genericForm" >\n  <div *ngFor="let data of genericData ; let i  = index" >\n    <app-dropdown-field *ngIf="(data.input == \'radio\'|| data.input == \'dropdown\' || data.input == \'multiselect\' || data.input == \'select\'  ) && data.visible " [genericData]="data" [genericForm]="genericForm" (emitResponseType)="changeResponseType($event,i)"></app-dropdown-field>\n  \n    <app-text-field *ngIf="data.input == \'text\' && !data.autocomplete  && data.visible " [genericData]="data" [genericForm]="genericForm" [genericEdit]= "genericEdit"></app-text-field>\n    \n    <app-textarea-field *ngIf="data.input == \'textarea\'  && data.visible " [genericData]="data" [genericForm]="genericForm" [genericEdit]= "genericEdit"></app-textarea-field>\n   \n    <app-number-field *ngIf="data.input == \'number\'  && data.visible " [genericData]="data" [genericForm]="genericForm" [genericEdit]= "genericEdit"></app-number-field>\n    \n    <app-select-field *ngIf="data.input == \'boolean\'  && data.visible " [genericData]="data" [genericForm]="genericForm" [genericEdit]= "genericEdit"></app-select-field>\n\n    <app-form-array-field (editquestion)="editquestion($event)" *ngIf="data.input == \'array\'  && data.visible " [genericData]="data" [genericForm]="genericForm" [genericEdit]= "genericEdit"></app-form-array-field>\n\n    <app-date-picker  *ngIf="data.input == \'date\' && data.visible" [genericData]="data" [genericForm]="genericForm" [genericEdit]= "genericEdit"></app-date-picker>\n\n    <app-chips-field *ngIf="data.input == \'chips\'  && data.visible " [genericData]="data" [genericForm]="genericForm" [genericEdit]= "genericEdit"></app-chips-field>\n\n    <app-auto-complete  *ngIf="data.input == \'text\'&& data.autocomplete && data.visible" [genericData]="data" [genericForm]="genericForm" [genericEdit]= "genericEdit" [hostUrl]="hostUrl"></app-auto-complete>\n  </div> \n\n\n</div>',styles:[""]}]}],t.ctorParameters=function(){return[]},t.propDecorators={genericData:[{type:h.Input}],genericForm:[{type:h.Input}],genericEdit:[{type:h.Input}],editnewquestion:[{type:h.Output}],hostUrl:[{type:h.Input}]},t}(),L=function(){function t(t){this._formBuilder=t,this.editquestion=new h.EventEmitter}return t.prototype.ngOnInit=function(){this.questionCount=this.genericData.value.length||1},t.prototype.editQuestion=function(t){"add"==t?this.editquestion.emit({mode:t,controlName:this.genericData.field}):"reset"==t?(this.questionCount=1,this.editquestion.emit({mode:t,controlName:this.genericData.field})):(this.questionCount-=1,this.editquestion.emit({mode:"delete",controlName:this.genericData.field,index:t}))},t.prototype.getControls=function(){return this.genericForm.controls[this.genericData.field].controls},t.prototype.add=function(t){var e;t.push(this._formBuilder.group(((e={})[this.genericData.field]=["",u.Validators.required],e))),this.questionCount++},t.prototype["delete"]=function(t,e){t.removeAt(e),this.questionCount--},t.decorators=[{type:h.Component,args:[{selector:"app-form-array-field",template:'<form [formGroup]="genericForm" *ngIf="genericForm" class="col-sm-6 fixSize _halfWidth">\n  <div formArrayName="{{genericData.field}}" class="col-xs-12" >\n    <div *ngFor="let quest of getControls() ; let i = index" class="_flex-box _justify-content-center" >\n      <div [formGroup]="quest" class="col-xs-12 noPadding">\n          <mat-form-field class="col-xs-10 noPadding">\n              <input matInput placeholder="{{genericData.field}}" formControlName="{{genericData.field}}" />\n            </mat-form-field>\n      \n          <button class ="col-xs-1"*ngIf="questionCount >1" mat-icon-button (click)="delete(genericForm.controls[genericData.field],i)" color="warn">\n            <i class="material-icons">\n                close\n                </i>\n          </button>\n        </div>\n        </div>\n    \n  </div>\n  <button mat-raised-button (click)="add(genericForm.controls[genericData.field])" class="_primary-btn btn-margin">\n              \n      {{\'buttons.addNew\'| translate}}\n      <i class="material-icons">\n          add\n          </i>\n    </button>\n    \x3c!-- <button mat-raised-button *ngIf="questionCount>1"(click)="reset()" color="warn" [disabled]=" questionCount<2" class="btn-margin">\n              \n        {{\'buttons.removeAll\'| translate}}\n        <i class="material-icons white">\n            delete_forever\n            </i>\n      </button> --\x3e\n    </form>',styles:[".btn-margin{margin:0 10px}._flexbox{flex-direction:column;align-items:center;display:flex}.noPadding{padding:0}"]}]}],t.ctorParameters=function(){return[{type:u.FormBuilder}]},t.propDecorators={genericData:[{type:h.Input}],genericForm:[{type:h.Input}],genericEdit:[{type:h.Input}],editquestion:[{type:h.Output}]},t}(),S=function(){function t(){}return t.prototype.ngOnInit=function(){},t.decorators=[{type:h.Component,args:[{selector:"app-image-card",template:'<span *ngFor="let url of imageUrl">\n  <div class="card">\n    <div class="roundedCard">\n      <img src={{url}} class="imageCard">\n    </div>\n  </div>\n</span>',styles:[".roundedCard{display:flex;align-items:center;margin:10px;height:130px;border:2px solid var(--grey-color);border-radius:5px;width:130px;background-color:var(--light-grey-color)}.imageCard{width:126px;height:auto}.card{display:inline-block}"]}]}],t.ctorParameters=function(){return[]},t.propDecorators={imageUrl:[{type:h.Input}]},t}(),R=function(){function t(){}return t.prototype.ngOnInit=function(){},t.decorators=[{type:h.Component,args:[{selector:"app-loader",template:'<ngx-spinner bdColor="rgba(51,51,51,0.8)" size="medium" color="#fff" type="ball-clip-rotate"></ngx-spinner>\n',styles:[""]}]}],t.ctorParameters=function(){return[]},t}(),M=function(){function t(){}return t.prototype.ngOnInit=function(){},t.decorators=[{type:h.Component,args:[{selector:"app-number-field",template:'<div [formGroup]="genericForm">\n  <mat-form-field *ngIf="genericData.validation.required" class="col-sm-6 fixSize _halfWidth">\n    <span *ngIf="genericData.input == \'number\'" matPrefix>+91 &nbsp;</span>\n    <input  type="number"  pattern="^[0-9]{10}$"  placeholder="{{genericData.label | camelcase}} "  formControlName="{{genericData.field}}" matInput [required]="genericData.validation.required" > \n  </mat-form-field>\n\n  <mat-form-field  *ngIf="!genericData.validation.required" class="col-sm-6 fixSize _halfWidth">\n      <span *ngIf="genericData.input == \'number\'" matPrefix>+91 &nbsp;</span>\n      <input type="number"   placeholder="{{genericData.label | camelcase}} " formControlName="{{genericData.field}}" matInput  > \n    </mat-form-field>\n</div>',styles:[".bold{font-size:15px;font-weight:1000}.right{text-align:right}.fixSize{height:54.6px}"]}]}],t.ctorParameters=function(){return[]},t.propDecorators={genericData:[{type:h.Input}],genericForm:[{type:h.Input}],genericEdit:[{type:h.Input}]},t}(),E=function(){function t(t,e){this.dialog=t,this.utilityService=e,this.sendMarkAsComplete=new h.EventEmitter}return t.prototype.ngOnInit=function(){},t.prototype.openDialog=function(){var e=this;this.dialog.open(D,{width:"450px",disableClose:!0}).afterClosed().subscribe(function(t){t&&e.sendFlag()})},t.prototype.sendFlag=function(){this.sendMarkAsComplete.emit(!0)},t.prototype.onBack=function(){this.utilityService.onBack()},t.decorators=[{type:h.Component,args:[{selector:"app-parent-heading",template:'<div class="horizontalLine">\n  <span class=" alingCenterlineParentHeading">\n    <div>\n      <h4 class="primaryColor">{{schoolName}}</h4>\n    </div>\n    \x3c!-- <span *ngIf="genericHeading == \'headings.parentListHeading\' && atleastOneComplete"><button mat-raised-button  class=" btnColor "(click)="openDialog()">{{\'buttons.markasComplete\' | translate}}</button></span> --\x3e\n    <span *ngIf="genericHeading == \'headings.parentListHeading\' && atleastOneComplete"><span class=" active " (click)="openDialog()">{{\'buttons.markasComplete\'\n        | translate}}</span></span>\n  </span>\n  <mat-divider *ngIf="schoolName || schoolNameDivider" class="Margin noPadding"></mat-divider>\n  \x3c!-- <span class="alingCenterline smallMargin"  *ngIf="!showControl"> --\x3e\n  \x3c!-- <span class="alingCenterline smallMargin">\n    <button  *ngIf="!showControl" class="noPadding" mat-button (click)="onBack()"><i class="material-icons">\n        keyboard_arrow_left\n      </i>\n      <span>Back</span>\n    </button>\n    <span class="heading  space noMargin space" *ngIf="genericHeading"> --\x3e\n      \x3c!-- {{ genericHeading | translate}} --\x3e\n      <breadcrumb [showControl]="showControl" [startIndex]="startIndex"></breadcrumb>\n        \x3c!-- </span>\n\n  </span> --\x3e\n</div>',styles:[".heading{margin-top:0;font-size:18px}.btnColor{background-color:var(--primary-color);color:var(--white-color);margin-left:30px}.alingCenterlineParentHeading{display:flex;align-items:center;flex-wrap:wrap}.active{border-radius:12px;border:1px solid var(--primary-color);padding:2px 8px;background-color:var(--button-background-color);cursor:pointer;margin-left:25px}.horizontalLine{display:flex;flex-direction:column}.noPadding{padding:0}.noMargin{margin:0}.Margin{margin:0 -20px}.primaryColor{color:var(--primary-color)}"]}]}],t.ctorParameters=function(){return[{type:y.MatDialog},{type:I}]},t.propDecorators={genericHeading:[{type:h.Input}],schoolName:[{type:h.Input}],startIndex:[{type:h.Input}],atleastOneComplete:[{type:h.Input}],schoolId:[{type:h.Input}],schoolNameDivider:[{type:h.Input}],showControl:[{type:h.Input}],sendMarkAsComplete:[{type:h.Output}]},t}(),F=function(){function t(){}return t.prototype.ngOnInit=function(){},t.decorators=[{type:h.Component,args:[{selector:"app-select-field",template:'<div [formGroup]="genericForm" >\n    <div class=" col-sm-6 fixSize _halfWidth">\n      <mat-checkbox   formControlName ="{{genericData.field}}" value="{{genericData.value}}" [required]="genericData.validations.required">{{genericData.label}}</mat-checkbox>\n    </div>\n  </div>',styles:[""]}]}],t.ctorParameters=function(){return[]},t.propDecorators={genericData:[{type:h.Input}],genericForm:[{type:h.Input}],genericEdit:[{type:h.Input}]},t}(),O=function(){function t(){}return t.prototype.ngOnInit=function(){},t.decorators=[{type:h.Component,args:[{selector:"app-text-field",template:'<div [formGroup]= "genericForm" *ngIf="genericForm">\n    <mat-form-field  class="col-sm-6 fixSize _halfWidth">\n            <input  matInput   type="text"  placeholder="{{genericData.label | camelcase}} "  formControlName="{{genericData?.field}}"  [required]="genericData.validation.required">\n    </mat-form-field>\n</div>\n\n\n',styles:[".bold{font-size:15px;font-weight:550}.right{text-align:right}.fixSize{height:54.6px}"]}]}],t.ctorParameters=function(){return[]},t.propDecorators={genericData:[{type:h.Input}],genericForm:[{type:h.Input}],genericEdit:[{type:h.Input}]},t}(),A=function(){function t(){}return t.prototype.ngOnInit=function(){},t.prototype.check=function(t){},t.decorators=[{type:h.Component,args:[{selector:"app-textarea-field",template:'<div [formGroup]="genericForm" *ngIf="genericForm"  >\n    <mat-form-field class="col-sm-6 fixSize  _halfWidth">\n        <div class="form-group">\n            <textarea  matInput formControlName="{{genericData.field}}" [required]="genericData.validation.required"  placeholder="{{genericData.label | camelcase}} " ></textarea>\n        </div>\n    </mat-form-field>\n</div>',styles:[".bold{font-size:15px;font-weight:550}.right{text-align:right}.fixSize{height:54.6px;margin-bottom:30px}"]}]}],t.ctorParameters=function(){return[]},t.propDecorators={genericData:[{type:h.Input}],genericForm:[{type:h.Input}],genericEdit:[{type:h.Input}]},t}(),j=function(){function t(){this.debounceTime=5e3,this.debounceSearch=new h.EventEmitter,this.clicks=new e.Subject}return t.prototype.ngOnInit=function(){var e=this;this.subscription=this.clicks.pipe(n.debounceTime(this.debounceTime)).subscribe(function(t){e.debounceSearch.emit(e.searchValue)})},t.prototype.ngOnDestroy=function(){this.subscription.unsubscribe()},t.prototype.clickEvent=function(t){t.preventDefault(),t.stopPropagation(),this.clicks.next(t)},t.decorators=[{type:h.Directive,args:[{selector:"[appDebounceSearch]"}]}],t.ctorParameters=function(){return[]},t.propDecorators={debounceTime:[{type:h.Input}],searchValue:[{type:h.Input}],debounceSearch:[{type:h.Output}],clickEvent:[{type:h.HostListener,args:["keyup",["$event"]]}]},t}(),B=function(){function t(){this.language=["English"]}return t.decorators=[{type:h.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[]},t.ngInjectableDef=h.defineInjectable({factory:function(){return new t},token:t,providedIn:"root"}),t}(),N=function(){function t(){this.showDropdown=!1,this.Logout=new h.EventEmitter,this.noAssess=!1}return t.prototype.ngOnInit=function(){},t.prototype.homePage=function(t){window.open(t,"_self")},t.prototype.openDropdown=function(){this.showDropdown=!this.showDropdown},t.prototype.onSignout=function(){this.Logout.emit(!0)},t.prototype.onLogin=function(){this.isLoggedIn=!this.isLoggedIn,this.onSignout()},t.decorators=[{type:h.Component,args:[{selector:"app-navbar",template:'<div *ngIf="url">\n  <nav class="navbar noMarginPadding ">\n\n    <div class="col-sm-6  col-md-6 col-xs-6 col-lg-6 alingCenterline noMarginPadding">\n\n      <img class="logo" src={{logo}} (click)="homePage(url)">\n      \x3c!-- <mat-card-title class="pageBrand">\n          <strong>{{ \'brand\' | translate }}</strong>\n        </mat-card-title> --\x3e\n    </div>\n\n    \x3c!-- <div class="col-sm-4 mod ">\n           <mat-card-title style="font-size:18px; color:gray; text-align: center;" >\n            Sikhshalocham Samikhsa \n              <mat-icon svgIcon="thumbs-up" style="font-size:29px; color: gray;">\n              </mat-icon>\n          </mat-card-title> \n        </div> --\x3e\n\n\n\n\n    <div class="col-sm-6 col-md-6 col-xs-6 col-lg-6">\n      <span *ngIf="!noAssess" class="right _flex-box alingCenterline">\n\n        \n        <button mat-icon-button (click)="openDropdown()">\n          <i class="material-icons">apps</i>\n        </button>\n\n        <div id="overlay" (click)="openDropdown()" *ngIf="showDropdown">\n          <app-container [url]="url" [portal]="portal"></app-container>\n        </div>\n\n\n\n\n        <span mat-button [matMenuTriggerFor]="menu" class="alingCenterline _cursor-pointer" *ngIf="currentUser">\n          <i class="material-icons brand dropdownIcon">\n            person\n          </i>\n          \x3c!-- <span class="brand ">{{currentUser?.name}}</span> --\x3e\n          <i class="material-icons brand icon">\n            keyboard_arrow_down\n          </i>\n        </span>\n        <mat-menu #menu="matMenu">\n          <span mat-menu-item class="matmenuIcon">\n            <i class="material-icons">\n              supervised_user_circle\n            </i>\n            <span class="padding">{{currentUser?.email}}</span>\n          </span>\n          <mat-divider></mat-divider>\n          <span mat-menu-item class="matmenuIcon black">\n            <i class="material-icons">\n              done\n            </i>\n            <span class="padding">{{currentUser?.name}}</span>\n          </span>\n          <mat-divider></mat-divider>\n          <span mat-menu-item class="padding" (click)="onSignout()">\n            <span class="bigPadding black">\n              {{\'menuDropdown.signOut\' | translate}}\n            </span>\n          </span>\n        </mat-menu>\n        \x3c!-- <div class="right horizontalLine">\n          <i class="material-icons brand helpIcon">\n            help_outline\n          </i>\n        </div> --\x3e\n      </span>\n\n    </div>\n\n\n  </nav>\n\n\n\n</div>',styles:['.noMarginPadding{margin:0;padding:0}.brand{color:var(--primary-color);margin-bottom:0}.logo{height:50px}.horizontalLine{position:relative;padding:0 8px}.icon{font-size:16px;padding-right:10px}.helpIcon{font-weight:10px}.horizontalLine:before{content:"";background:var(--border-color);position:absolute;bottom:20%;left:-5px;height:60%;width:1px}.navbar{display:flex;align-items:center}.line{line-height:12px}#overlay{position:fixed;display:hidden;width:100%;height:100%;top:0;left:0;right:0;bottom:0;background-color:transperent;z-index:101}.pageBrand{font-size:18px;padding:0 10px;margin-bottom:0}.pageMenu{margin-bottom:0}.alingCenterline{display:flex;align-items:center}.dropdownIcon{top:1px;line-height:2}.right{display:flex;justify-content:flex-end}.matmenuIcon{display:flex;align-items:center;color:#bababa}.padding{padding-left:10px}.bigPadding{padding-left:40px}.black{color:var(--grey-color)}._primary-btn{font-size:14px;padding-bottom:2px;height:30px;line-height:0;margin-bottom:6px;color:var(--white-color)}']}]}],t.ctorParameters=function(){return[]},t.propDecorators={url:[{type:h.Input}],dropdownLabel:[{type:h.Input}],currentUser:[{type:h.Input}],logo:[{type:h.Input}],Logout:[{type:h.Output}],isLoggedIn:[{type:h.Input}],portal:[{type:h.Input}],noAssess:[{type:h.Input}]},t}(),U=function(){function t(){this.submenu=!1,this.menu=[{displayName:"Escritorio",iconName:"desktop_windows",route:"escritorio"},{displayName:"Entradas GADE",iconName:"ballot",route:"entradasGADE"},{displayName:"Expedientes",iconName:"description",children:[{displayName:"Mis Expedientes",iconName:"how_to_reg",route:"/misexpedientes"},{displayName:"Todos",iconName:"waves",route:"/todos"}]},{displayName:"Perfiles",iconName:"group",children:[{displayName:"Búsqueda Perfil",iconName:"search",route:"/busquedaperfiles"}]}]}return t.prototype.openSideSubMenu=function(t){console.log("clicked"),"configurations"==t?this.submenu=1!=this.submenu:console.log("not matched")},t.prototype.ngOnInit=function(){this.permissionAssignedRole=JSON.parse(localStorage.getItem("canAcess")),console.log("link",this.link)},t.decorators=[{type:h.Component,args:[{selector:"app-sidenav",template:'<div class="sideNavheading" routerLink="../programs" matTooltip="{{\'message.goToProgramDashboard\' | translate}}"\n  *ngIf="programsShow">\n  <i class="material-icons">\n    keyboard_arrow_left\n  </i> {{ \'headings.programs\' | translate }}\n</div>\n\x3c!-- <div routerLink = "{{option.anchorLink}}"  [routerLinkActiveOptions]="{exact:true}" routerLinkActive="active"*ngFor="let option of link?.options"  class="subHeading"> --\x3e\n\x3c!-- <div [routerLink]="[\'assessments/:programId/:assessmentId/\'+option.link?.anchorLink,option.link.programId,option.link.assessmentId ]" routerLinkActive="active" *ngFor="let option of link?.options"  class="subHeading"> --\x3e\n\x3c!-- <div [routerLink]="[option.link.anchorLink ]"  [queryParamsHandling]="preserve" [queryParams]="{ programId : option.link.programId , assessmentId : option.link.assessmentId}" routerLinkActive="active" *ngFor="let option of link?.options"  class="subHeading"> --\x3e\n\n\n\n\x3c!-- <span *ngFor="let option of link?.options">\n\n  <div *ngIf="option.id==\'configurations\'" routerLinkActive="active" class="subHeading"\n    (click)="openSideSubMenu(option.id)">\n    <span class="sideNavSubheading">\n      <i class="material-icons">\n        {{option.icon}}\n      </i> {{ option.value | translate }}\n    </span>\n  </div>\n  \n  <div [routerLink]="[option.anchorLink ]" routerLinkActive="active" class="subHeading"\n    *ngIf="permissionAssignedRole.includes(option.id) && option.id!=\'configurations\'">\n    <span class="sideNavSubheading">\n      <i class="material-icons">\n        {{option.icon}}\n      </i> {{ option.value | translate }}\n    </span>\n  </div>\n\n</span> --\x3e\n\n\x3c!-- <div class="dropdown-container" *ngIf="submenu">\n  <div class="col-sm-12" [routerLink]="[\'/configuration/dashboard\']" routerLinkActive="active" class="sub-menu">Create\n  </div>\n  <div class="col-sm-12" [routerLink]="[\'/configuration/observation-review\']" routerLinkActive="active"\n    class="sub-menu">Drafts</div>\n  <div class="col-sm-12" [routerLink]="[\'/configuration/observation-review\']" routerLinkActive="active"\n    class="sub-menu">Published</div>\n\n</div> --\x3e\n\n\n    <mat-nav-list>\n   \n      <span *ngFor="let item of link?.options">\n        <span *ngIf="item.children && item.children.length > 0">\n          <mat-accordion>\n            <mat-expansion-panel class="no-border">\n              <mat-expansion-panel-header class="subHeading black-color">\n                <mat-panel-title  [routerLink]="[item.anchorLink]" >\n                  \x3c!-- Cabeceras del submenu --\x3e\n                  <div   fxLayout="row" fxLayoutAlign="space-between center">\n                    <mat-icon style="padding: 0px">{{item.icon}}</mat-icon>\n                    {{item.value | translate }}\n                  </div>\n                </mat-panel-title>\n              </mat-expansion-panel-header>\n              <span *ngFor="let child of item.children">\n                <mat-list-item [routerLink]="[child.anchorLink]" routerLinkActive="active" class="subHeading black-color">\n                  \x3c!-- Entradas de cada submenú  --\x3e\n                  <div  fxLayout="row" fxLayoutAlign="space-between center">\n                    <mat-icon>{{child.icon}}</mat-icon>\n                    {{child.value}}\n                  </div>\n                </mat-list-item>\n              </span>\n            </mat-expansion-panel>\n          </mat-accordion>\n        </span>\n        <span *ngIf="!item.children || item.children.length === 0">\n          <mat-list-item  [routerLink]="[item.anchorLink]" routerLinkActive="active" class="subHeading black-color" >\n            \x3c!-- Entradas principales --\x3e\n            <div  fxLayout="row" fxLayoutAlign="space-between center" >\n              <mat-icon>{{item.icon}}</mat-icon>\n              {{item.value | translate}}\n            </div>\n          </mat-list-item>\n        </span>\n      </span>\n    </mat-nav-list>\n',styles:[".sideNavSubheading{font-size:15px;padding:10px 23px;height:40px;display:flex;cursor:pointer}.subHeading{color:var(--grey-color)}.sideNavheading{height:40px;display:flex;align-items:center;padding:0 0 0 5px;cursor:pointer}.sideNavheading:hover,.subHeading:hover{color:var(--white-color);background-color:var(--primary-color)!important}.active{color:var(--white-color)!important;background-color:var(--primary-color)!important}.material-icons{font-size:20px;padding:0 5px}.sub-menu{background:#f0f8ff;color:#948d8d;padding:5px 10px 5px 50px}.sub-menu:hover{padding:5px 10px 5px 50px;background:#b1212b;color:#fff}.white-color{color:#fff!important}.exp-panel-header{height:48px!important;color:#fff}.black-color{color:#333}.no-border{border-radius:0!important}"]}]}],t.ctorParameters=function(){return[]},t.propDecorators={link:[{type:h.Input}],programsShow:[{type:h.Input}]},t}(),T=function(){function t(){this.showDropdown=!1,this.openDrawer=new h.EventEmitter,this.Logout=new h.EventEmitter,this.noAssess=!1}return t.prototype.ngOnInit=function(){this.openSideNav()},t.prototype.onSignout=function(){this.Logout.emit(!0)},t.prototype.openSideNav=function(){this.openDrawer.emit(!0)},t.prototype.openDropdown=function(){this.showDropdown=!this.showDropdown},t.prototype.navigate=function(t){window.open(t,"_blank")},t.decorators=[{type:h.Component,args:[{selector:"app-responsive-navbar",template:'<nav class="responsiveNavbar noMarginPadding">\n  <body class=" col-xs-12 noMarginPadding alingCenterline" >\n      <span  *ngIf="!noAssess"class="col-xs-4 alingCenterline noMarginPadding">\n          <button mat-icon-button>\n          <i class="material-icons" (click)="openSideNav()">\n            menu\n              </i>\n              </button>\n      </span>\n    \n    <mat-card-title [ngClass]="{\'pageBrand col-xs-4 alingCenterline\' : !noAssess , \'col-xs-8  _flexStart\' : noAssess }" class="pageBrand col-xs-4 alingCenterline">\n        <img  class="logo" src ={{logo}} >\n      \x3c!-- <strong>{{ \'brandResponsive\' | translate }}</strong> --\x3e\n    </mat-card-title>\n\n    <span class="col-xs-4 noMarginPadding _flexEnd">\n\n     \x3c!-- Responsive nav --\x3e\n\n\n        <span *ngIf="!noAssess" class="right _flex-box alingCenterline app-box">\n            <button mat-icon-button (click)="openDropdown()">\n                  <i class="material-icons">apps</i>\n            </button>\n            \n            <div id="overlay" (click)="openDropdown()" *ngIf="showDropdown">\n             <app-container [url]="url" [portal]="portal"></app-container>\n              </div>\n\n\n\n\n        <button mat-icon-button [matMenuTriggerFor]="menu" class=" _cursor-pointer">\n          <i class="material-icons dropdownIcon">\n              person\n              </i>\n        </button>\n      </span>\n\n        <mat-menu #menu="matMenu">\n          <span mat-menu-item class="matmenuIcon">\n            <i class="material-icons">\n              supervised_user_circle\n            </i>\n            <span class="padding">{{currentUser?.email}}</span>\n          </span>\n          <mat-divider></mat-divider>\n          <span mat-menu-item class="matmenuIcon black">\n            <i class="material-icons">\n              done\n            </i>\n            <span class="padding">{{currentUser?.name}}</span>\n          </span>\n          <mat-divider></mat-divider>\n          <span mat-menu-item class="padding" (click)="onSignout()">\n            <span class="bigPadding ">\n              {{\'menuDropdown.signOut\' | translate}}\n            </span>\n          </span>\n  \n        </mat-menu>\n      </span>\n    \n    </body>\n</nav>',styles:[".noMarginPadding{margin:0;padding:0}.icon{font-size:16px;padding-right:10px}._flexEnd{display:flex;justify-content:flex-end}.logo{height:50px}._flexStart{display:flex;justify-content:flex-start}.responsiveNavbar{display:none;align-items:center;height:51px}.line{line-height:12px}.pageBrand{font-size:18px;padding:0 10px;margin-bottom:-4px;display:flex;justify-content:center}.pageMenu{margin-top:0}.alingCenterline{display:flex;align-items:center}.dropdownIcon{top:1px;margin-top:7px;font-weight:700}.active{color:var(--white-color);background-color:var(--primary-color)}.matmenuIcon{display:flex;align-items:center;color:var(--grey-color)}.padding{padding-left:10px}.bigPadding{padding-left:40px}.black{color:var(--black-color)}.responsiveLogo{margin-top:-5px}.right{display:flex;justify-content:flex-end}.app-box{width:300px!important}"]}]}],t.ctorParameters=function(){return[]},t.propDecorators={openDrawer:[{type:h.Output}],currentUser:[{type:h.Input}],logo:[{type:h.Input}],Logout:[{type:h.Output}],url:[{type:h.Input}],portal:[{type:h.Input}],noAssess:[{type:h.Input}]},t}(),q=function(){function t(){this.program=new h.EventEmitter}return t.prototype.ngOnInit=function(){this.currentProgramIndex=0},t.prototype.programSelect=function(t,e){this.currentProgramIndex=e,this.program.emit(t)},t.decorators=[{type:h.Component,args:[{selector:"app-program-sidenav",template:'<div class="heading">\n    {{ \'headings.programs\' | translate }}\n</div>\n<div class="subHeading" *ngFor="let results of result; let i=index" (click)="programSelect(results, i)">\n    <span class="sideNavSubheading" [ngClass]="{\'active\': currentProgramIndex === i}">\n        <div class="overFlowHidden" matTooltip="{{results.name}}" >\n            {{results.name}}\n        </div>\n    </span>\n</div>\n',styles:[".sideNavSubheading{font-size:15px;padding:10px 23px;min-height:40px;display:flex;cursor:pointer;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.subHeading{color:var(--grey-color)}.active,.subHeading:hover{color:var(--white-color);background-color:var(--primary-color)}.heading{height:40px;display:flex;align-items:center;padding:0 0 0 15px}.overFlowHidden{white-space:nowrap;text-overflow:ellipsis;overflow:hidden}"]}]}],t.ctorParameters=function(){return[]},t.propDecorators={result:[{type:h.Input}],program:[{type:h.Output}]},t}(),z=function(){function t(t){this.http=t,this.language={}}return t.prototype.use=function(a){var i=this;return new Promise(function(e,t){var n="assets/i18n/"+(a||"en")+".json";i.http.get(n).subscribe(function(t){i.language=Object.assign({},t||{}),e(i.language)},function(t){i.language={},e(i.language)})})},t.decorators=[{type:h.Injectable}],t.ctorParameters=function(){return[{type:i.HttpClient}]},t}(),H=function(){function t(t){this.translate=t,this.resarray="",this.obj={}}return t.prototype.transform=function(t){var e=this;if(-1===t.indexOf("."))return this.translate.language[t]||t;var n=t.split(".");return this.resarray=this.translate.language,n.forEach(function(t){e.resarray&&(e.resarray=e.resarray[t])}),this.resarray||t},t.decorators=[{type:h.Pipe,args:[{name:"translate",pure:!1}]}],t.ctorParameters=function(){return[{type:z}]},t}(),G=function(){function t(){}return t.prototype.transform=function(t){if(null==t||""==t)return t;t=t.trim();for(var e="",n=0;n<t.length;n++)/[A-Z]/.test(t[n])&&0!=n&&/[a-z]/.test(t[n-1])&&(e+=" "),0==n&&/[a-z]/.test(t[n])?e+=t[n].toUpperCase():e+=t[n];return e},t.decorators=[{type:h.Pipe,args:[{name:"camelcase",pure:!1}]}],t.ctorParameters=function(){return[]},t}(),V=function(){function t(){}return t.prototype.transform=function(t){return null==t||""==t?"NA":t},t.decorators=[{type:h.Pipe,args:[{name:"blank",pure:!1}]}],t.ctorParameters=function(){return[]},t}(),W=function(){function t(t){this.http=t}return t.prototype.get=function(t){return this.http.get(t)},t.prototype.getJSON=function(t){return this.http.get(t)},t.prototype.post=function(t,e){return this.http.post(t,e)},t.prototype.upload=function(t,e,n){var a=new FormData;return e&&Array.from(e).forEach(function(t){a.append(n,t)}),this.http.post(t,a,{reportProgress:!0,observe:"events"})},t.decorators=[{type:h.Injectable}],t.ctorParameters=function(){return[{type:i.HttpClient}]},t}(),$=function(){function t(){this.footerLink=[{name:"Copyright @2019 Shikshalokam"},{name:"Terms of Service"},{name:"Privacy Policy"},{name:"Contact Us"}]}return t.prototype.ngOnInit=function(){},t.decorators=[{type:h.Component,args:[{selector:"app-footer",template:'<div class="footer">\n    <ul class="list">\n      <li *ngFor="let link of footerLink; let last=last">\n          <a class="footerName">{{link.name}}\n          <span *ngIf="!last" class="pipe">|</span>\n          </a>\n      </li>\n    </ul>\n</div>',styles:[".footer{height:30px;background-color:var(--white-color);width:100%;line-height:30px}.footer .list{list-style:none;margin:0;padding:0;display:flex;justify-content:center;border-top:1px solid var(--light-grey-color)}.footer .list li{display:inline-block;margin:5px;cursor:pointer}.footer .list li .pipe{padding-left:5px}.footerName{font-size:12px;color:var(--primary-color)}"]}]}],t.ctorParameters=function(){return[]},t}(),Q=function(){function t(t){this.apiService=t,this.roleAcess=[]}return t.prototype.getRolePermission=function(t){return this.apiService.get(t)},t.prototype.getUniqueRoleAcessObject=function(t,e){var n;return this.roleAcess=[],t.tabActions.forEach(function(t){t.id===e&&(n=t)}),this.getUniqueRoleAcess(n),this.roleAcess},t.prototype.getUniqueRoleAcess=function(t){var e=this;t.tabActions.forEach(function(t){!0===t.accessibility&&e.roleAcess.push(t.id),t.tabActions&&e.getUniqueRoleAcess(t)})},t.decorators=[{type:h.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:W}]},t.ngInjectableDef=h.defineInjectable({factory:function(){return new t(h.inject(W))},token:t,providedIn:"root"}),t}(),J=function(){function t(){this.showDropdown=!1}return t.prototype.ngOnInit=function(){this.apps=[{icon:"school",tooltip:"Learning",url:this.url+"/assessments/learning"},{icon:"dashboard",tooltip:"Programs",url:this.url+"/programs"}]},t.prototype.openDropdown=function(){this.showDropdown=!this.showDropdown},t.prototype.navigate=function(t){window.open(t,"_blank")},t.decorators=[{type:h.Component,args:[{selector:"app-container",template:'<div class="dropdownDiv">\n  <div class="insideDiv">\n      <ul class="dropdownFeature">\n          <li class="verticalCenteralign" *ngFor="let app of apps">\n            <a (click)="navigate(app.url)" class="appName">\n              <div class="apple">\n                <i class="material-icons" id="whiteIcon">\n                  {{app.icon}}\n                </i>\n              </div>\n              <div class="title" matTooltip={{app.tooltip}}>\n              <div [ngClass]="{\'active\':app.tooltip==portal, \'inactive\':app.tooltip!==portal}">\n                {{app.tooltip}}\n              </div>\n            </div>\n            </a>\n          </li>\n        </ul>\n  </div>\n</div>\n\n',styles:['.dropdownDiv{color:var(--app-black-color);background-color:var(--white-color);position:absolute;width:500px;height:350px;right:8px;top:35px;z-index:105;border-radius:2px;box-shadow:0 0 3px 3px rgba(0,0,0,.08);margin:20px;padding:20px 0}.insideDiv{width:500px;height:310px;overflow-y:auto;overflow-x:hidden}.dropdownDiv:before{content:"";position:absolute;top:-27px;right:60px;border:13px solid transparent;border-bottom:13px solid rgba(0,0,0,.08)}.dropdownDiv:after{content:"";position:absolute;top:-24px;right:60px;border:12px solid transparent;border-bottom:12px solid var(--white-color)}#overlay{position:fixed;display:hidden;width:100%;height:100%;top:0;left:0;right:0;bottom:0;background-color:transparent;z-index:101}.dropdownFeature{display:flex;justify-content:left;flex-wrap:wrap;width:483px;list-style:none}.verticalCenteralign{display:inline-block;flex-direction:column;align-items:center;cursor:pointer;padding:0 30px 20px}.verticalCenteralign .appName{text-decoration:none}.apple{background:linear-gradient(to bottom,var(--app-blue-color) 10%,var(--app-darkBlue-color) 90%);height:80px;width:80px;border:1px solid var(--primary-color);border-radius:15px;padding:10px;display:flex;align-items:center;justify-content:center}#whiteIcon{color:var(--white-color);font-size:45px;line-height:1}.active{margin-top:10px;border-radius:12px;border:1px solid var(--primary-color);padding:0 8px;font-size:11px;width:100%;text-align:center;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;color:var(--app-blue-color)}.inactive{color:var(--darkBlack-color);text-align:center;padding-top:10px;font-size:12px;text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.title{height:20px;line-height:20px;width:80px}']}]}],t.ctorParameters=function(){return[]},t.propDecorators={url:[{type:h.Input}],portal:[{type:h.Input}]},t}(),K=function(){function t(){}return t.prototype.transform=function(t,e){return(t=t.trim()).length<=e||""==t?t:t=t.substring(0,e-3)+"..."},t.decorators=[{type:h.Pipe,args:[{name:"minchar",pure:!1}]}],t.ctorParameters=function(){return[]},t}(),X=function(){function t(){}return t.forRoot=function(){return{ngModule:t,providers:[z,I,W,Q]}},t.decorators=[{type:h.NgModule,args:[{declarations:[H,G,K,V,N,$,J,U,T,q],imports:[p.NgxSpinnerModule,v.CommonModule,d.RouterModule,y.MatButtonModule,i.HttpClientModule,y.MatMenuModule,y.MatExpansionModule,y.MatSidenavModule,y.MatListModule,y.MatIconModule,y.MatCardModule,y.MatDividerModule,y.MatTooltipModule],providers:[],exports:[H,N,$,J,U,T,G,V,q,v.CommonModule,K]}]}],t}(),Y=function(){function t(){this.emitCurrentProgram=new h.EventEmitter}return t.prototype.ngOnInit=function(){},t.prototype.programClick=function(t){this.emitCurrentProgram.emit(t)},t.decorators=[{type:h.Component,args:[{selector:"app-programsDashboard",template:'<div class="margin">\n  <div *ngFor="let currentProgram of programsList; let i=index" class=" col-lg-6 col-md-6 col-sm-6 col-xs-12 _noMarginPadding">\n      <mat-card \n      class=" _cursor-pointer marginTop" (click)="programClick(currentProgram)">\n      <div class="_flex-box _justify-content-center _flex-column  _overFlow-ellipsis">\n        <div class="_flex-box _justify-content-space-between cardHeading noWarp" matTooltip="{{currentProgram?.name}}">\n            {{currentProgram?.name | minchar:15}}\n            <i class="material-icons iconSize" > dashboard </i>\n        </div>\n        <div class="description noWarp _overFlow-ellipsis col-lg-12 col-md-12 col-sm-6 col-xs-12 _noMarginPadding" matTooltip="{{currentProgram?.description}}">\n          {{currentProgram?.description | minchar:30}}\n        </div>\n      </div>\n    </mat-card>\n  </div>\n  \n</div>',styles:[".noMarginPadding{margin:0;padding:0}.flex-box-justify-content-center{display:flex!important;align-items:center;justify-content:center}.margin{margin:20px}.iconSize{font-size:40px!important;color:var(--grey-color)}.example-header-image{background-size:cover}._flex-column{flex-direction:column}.cardHeading{font-size:18px;width:100%}.description{font-size:15px;color:var(--grey-color)}.marginTop{margin:10px 0}.noWarp{white-space:nowrap}"]}]}],t.ctorParameters=function(){return[]},t.propDecorators={programsList:[{type:h.Input}],emitCurrentProgram:[{type:h.Output}]},t}(),Z=function(){function t(t){this._fb=t,this.paginationFlag=!1,this.paginationResponse=new h.EventEmitter}return t.prototype.ngOnInit=function(){var e=this;this.pageIndex?(this.startList=this.pageIndex*this.pageLimit+1,this.length-this.startList>this.pageLimit?this.endList=this.startList+this.pageLimit-1:this.endList=this.startList+(this.length-this.startList),this.endList>this.length&&(this.endList=this.length)):(this.startList=1,this.pageLimit?this.endList=this.startList+this.pageLimit-1:(this.endList=this.startList+this.itemsPerPage[0]-1,this.endList>this.length&&(this.endList=this.length))),0==this.length?this.label="Showing 0 - 0 out of "+this.length+" "+this.paginationLabel:this.label="Showing "+this.startList+" - "+this.endList+" out of "+this.length+" "+this.paginationLabel,this.last=this.length/this.pageLimit-1,this.length%this.pageLimit!=0&&(this.last=Math.floor(this.last)+1),this.selected=this.pageLimit?this.pageLimit:this.itemsPerPage[0],this.pagination={previousPageIndex:0,pageIndex:this.pageIndex,pageLimit:this.selected,length:this.length,label:this.paginationLabel},this.data={editable:!0,field:"pageLimit",input:"dropdown",label:this.pageLimit,validation:{required:!0},value:this.itemsPerPage[0],visible:!0},Object.assign(this.data,{options:[]}),this.itemsPerPage.forEach(function(t){e.data.options.push({value:t,label:t})}),this.pageSize=this._fb.group({pageLimit:[this.pagination.pageLimit,u.Validators.required]}),this.paginationFlag=!0},t.prototype.page=function(t){switch(t){case"back":this.pagination.previousPageIndex=this.pagination.pageIndex,this.pagination.pageIndex-=1,this.pageIndex=this.pagination.pageIndex;break;case"next":this.pagination.previousPageIndex=this.pagination.pageIndex,this.pagination.pageIndex+=1,this.pageIndex=this.pagination.pageIndex;break;case"first":this.pagination.previousPageIndex=0,this.pagination.pageIndex=0,this.pageIndex=this.pagination.pageIndex;break;case"last":this.pagination.previousPageIndex=this.last,this.pagination.pageIndex=this.pagination.previousPageIndex,this.pageIndex=this.pagination.pageIndex}this.startList=this.pagination.pageIndex*this.pageLimit+1,this.length-this.startList>this.pageLimit?this.endList=this.startList+this.pageLimit-1:(this.endList=this.startList+(this.length-this.startList),this.endList>this.length&&(this.endList=this.length)),0==this.length?this.label="Showing 0 - 0 out of "+this.length+" "+this.paginationLabel:this.label="Showing "+this.startList+" - "+this.endList+" out of "+this.length+" "+this.paginationLabel,this.sendPaginationResponse()},t.prototype.setPageLimit=function(t){this.last=this.length/t-1,this.pagination.pageIndex=0,this.pagination.previousPageIndex=0,this.length%t!=0&&(this.last=Math.floor(this.last)+1),this.pagination.pageLimit=t,this.startList=1,this.endList=this.startList+this.pagination.pageLimit-1,this.endList>this.length&&(this.endList=this.length,this.label="Showing "+this.startList+" - "+this.endList+" out of "+this.length+" "+this.paginationLabel),this.label="Showing "+this.startList+" - "+this.endList+" out of "+this.length+" "+this.paginationLabel,this.sendPaginationResponse()},t.prototype.sendPaginationResponse=function(){this.paginationResponse.emit(this.pagination)},t.decorators=[{type:h.Component,args:[{selector:"app-pagination",template:'<div class="_flex-box  _flex-end" *ngIf="paginationFlag">\n\n    <div [formGroup]="pageSize" class="_flex-box">\n\n        <span class="label">Items per page :</span>\n        <mat-form-field class="width" *ngIf="data.input == \'dropdown\'">\n          <mat-select [disabled]="!data.editable"  formControlName="{{data.field}}" required >\n              <mat-option *ngFor="let opt of data.options" [value]="opt.value" (click)="setPageLimit(opt.value)" >\n                {{opt.label}}\n              </mat-option>\n          </mat-select>\n        </mat-form-field>\n    \x3c!-- <app-dropdown-field [genericData]="data" [genericForm]="pageSize" (emitResponseType) ="setPageLimit($event)"></app-dropdown-field> --\x3e\n                  \n    </div>\n    <div class="_flex-box">\n        <button mat-icon-button (click)="page(\'first\')" [disabled]="pagination.pageIndex === 0" matTooltip="First Page">\n            <i class="material-icons _icon">\n                first_page\n            </i>\n        </button>\n        <button mat-icon-button (click)="page(\'back\')" [disabled]="pagination.pageIndex === 0" matTooltip="Previous Page">\n            <i class="material-icons _icon">\n                keyboard_arrow_left\n            </i>\n        </button>\n        <div class ="pagLabel ">\n            {{label}}\n        </div>\n        <button mat-icon-button (click)="page(\'next\')" [disabled]="pagination.pageIndex === last" matTooltip="Next Page">\n            <i class="material-icons _icon">\n                keyboard_arrow_right\n            </i>\n        </button>\n        <button mat-icon-button (click)="page(\'last\')" [disabled]="pagination.pageIndex === last" matTooltip="Last Page">\n            <i class="material-icons _icon">\n                last_page\n            </i>\n        </button>\n\n    </div>\n</div>',styles:[".width{width:50px}.label{color:var(--faded-label-color);font-weight:100;font-size:12px}.pagLabel{font-size:12px;color:var(--faded-label-color);margin-bottom:-5px}._icon{color:var(--primary-color)}"]}]}],t.ctorParameters=function(){return[{type:u.FormBuilder}]},t.propDecorators={length:[{type:h.Input}],paginationLabel:[{type:h.Input}],itemsPerPage:[{type:h.Input}],pageLimit:[{type:h.Input}],pageIndex:[{type:h.Input}],paginationResponse:[{type:h.Output}]},t}(),tt=function(){function t(){}return t.prototype.ngOnInit=function(){},t.decorators=[{type:h.Component,args:[{selector:"app-date-picker",template:'<div [formGroup]="genericForm" >\n  \n  <mat-form-field class=" col-sm-6 fixSize _halfWidth" >\n    <input *ngIf="genericData.label === \'end date\'"  placeholder="{{genericData.label | camelcase}} "  matInput [matDatepicker]="picker" formControlName="{{genericData.field}}" [max]="genericData.max" [min]="genericForm.controls.fromDate.value" \n      (focus)="picker.open()" (click)="picker.open()" [required]="genericData.validation.required" [disabled]="! genericForm.controls.fromDate.valid">\n    <input *ngIf="genericData.label !== \'end date\'"  placeholder="{{genericData.label | camelcase}} "  matInput [matDatepicker]="picker" formControlName="{{genericData.field}}" [max]="genericData.max" [min]="genericData.min" \n      (focus)="picker.open()" (click)="picker.open()" [required]="genericData.validation.required">  \n    <mat-datepicker-toggle matSuffix [for]="picker"></mat-datepicker-toggle>\n    <mat-datepicker #picker></mat-datepicker>\n  </mat-form-field>\n</div>',styles:[".space{padding:0 10px}.bold{font-size:15px;font-weight:900}.right{text-align:right}.fixSize{height:54.6px}"]}]}],t.ctorParameters=function(){return[]},t.propDecorators={genericData:[{type:h.Input}],genericForm:[{type:h.Input}],genericEdit:[{type:h.Input}]},t}(),et=function(){function t(t,e){var n=this;this.apiService=t,this.route=e,this.id="",this.route.queryParams.subscribe(function(t){n.solutionId=t.solutionId})}return t.prototype.ngOnInit=function(){},t.prototype.getAutoComplete=function(t){var e=this;this.apiService.get(this.hostUrl+this.genericData.url+this.solutionId+"?id="+t).subscribe(function(t){e.autoCompleteData=t.result,console.log(e.hostUrl)},function(t){e.autoCompleteData=[],console.log(e.hostUrl)})},t.prototype.inputChange=function(t){this.id=t.target.value},t.prototype.searchEntityIdInApi=function(t){this.getAutoComplete(t)},t.decorators=[{type:h.Component,args:[{selector:"app-auto-complete",template:'<div [formGroup]= "genericForm" *ngIf="genericForm">\n    <mat-form-field  class="col-sm-6 fixSize _halfWidth">\n            <input  matInput   type="text" \n            placeholder="{{genericData.label | camelcase}} "  formControlName="{{genericData.field}}" \n            (keyup)="inputChange($event)"\n            [matAutocomplete]="auto" appDebounceSearch (debounceSearch)="searchEntityIdInApi($event)"\n            [debounceTime]="200" [searchValue]="id"\n             [required]="genericData.validation.required"\n             >\n\n            <mat-autocomplete  #auto="matAutocomplete" >\n                <mat-option *ngFor="let option of autoCompleteData " [value]="option.externalId" matTooltip="{{option.name}}">\n                                {{option.externalId}}-{{option.name}}\n                </mat-option>\n            </mat-autocomplete>\n    </mat-form-field>\n</div>\n\n\n',styles:[".bold{font-size:15px;font-weight:550}.right{text-align:right}.fixSize{height:54.6px}"]}]}],t.ctorParameters=function(){return[{type:W},{type:d.ActivatedRoute}]},t.propDecorators={genericData:[{type:h.Input}],genericForm:[{type:h.Input}],genericEdit:[{type:h.Input}],hostUrl:[{type:h.Input}]},t}(),nt=function(){function t(){}return t.prototype.ngOnInit=function(){},t.decorators=[{type:h.Component,args:[{selector:"app-individual-loader",template:'<span class="spinner">\n    <div class="bounce1"></div>\n    <div class="bounce2"></div>\n    <div class="bounce3"></div>\n</span>',styles:[".spinner{width:70px;text-align:center}.spinner>div{width:18px;height:18px;background-color:var(--primary-color);border-radius:100%;display:inline-block;-webkit-animation:1.4s ease-in-out infinite both sk-bouncedelay;animation:1.4s ease-in-out infinite both sk-bouncedelay}.spinner .bounce1{-webkit-animation-delay:-.32s;animation-delay:-.32s}.spinner .bounce2{-webkit-animation-delay:-.16s;animation-delay:-.16s}@-webkit-keyframes sk-bouncedelay{0%,100%,80%{-webkit-transform:scale(0)}40%{-webkit-transform:scale(1)}}@keyframes sk-bouncedelay{0%,100%,80%{-webkit-transform:scale(0);transform:scale(0)}40%{-webkit-transform:scale(1);transform:scale(1)}}"]}]}],t.ctorParameters=function(){return[]},t}(),at=function(){function t(){this.pagination=!1,this.pageIndex=0,this.pageLimit=10,this.itemsPerPage=[10,15,20],this.pageEvent=new h.EventEmitter}return t.prototype.ngOnInit=function(){},t.prototype.pageResponse=function(t){this.pageEvent.emit(t)},t.decorators=[{type:h.Component,args:[{selector:"app-graph-table-chart",template:'<div *ngIf="section" >\n    <div *ngFor="let sections of section.subSections">\n\n    <div>\n        <app-table-component [headers]="sections?.tabularData?.headers" [datas]="sections?.data" [tableScroll]="sections?.tableScroll" *ngIf="sections?.table">\n        </app-table-component>\n    </div>\n    <div class="marginTop _border">\n        <app-column-graph [datas]="sections?.newGraphData ? sections?.newGraphData : sections?.data" [configs]="sections?.graphData" *ngIf="sections?.graph">\n        </app-column-graph>\n    </div>\n\n    <app-pagination *ngIf="pagination" [length]="section?.data.length" [pageLimit]="pageLimit"\n              [pageIndex]="pageIndex" [itemsPerPage]="itemsPerPage" (paginationResponse)="pageResponse($event)"\n              [paginationLabel]="paginationLabel"></app-pagination>\n    </div>\n    \n</div>',styles:[".marginTop{margin-top:20px}"]}]}],t.ctorParameters=function(){return[]},t.propDecorators={section:[{type:h.Input}],pagination:[{type:h.Input}],pageIndex:[{type:h.Input}],pageLimit:[{type:h.Input}],itemsPerPage:[{type:h.Input}],paginationLabel:[{type:h.Input}],pageEvent:[{type:h.Output}]},t}(),it=function(){function t(){this.displayedColumns=[]}return t.prototype.ngOnInit=function(){this.tableScroll&&this.createDataSource()},t.prototype.createDataSource=function(){var e=this;this.headers.forEach(function(t){e.displayedColumns.push(t.name)}),this.datas=new y.MatTableDataSource(this.datas)},t.decorators=[{type:h.Component,args:[{selector:"app-table-component",template:'<div *ngIf="!tableScroll">\n  <table class="customTable">\n    <tr>\n      <th class="capitalize" *ngFor="let header of headers">{{header?.value}}</th>\n    </tr>\n    <tr *ngFor="let data of datas">\n      <td *ngFor="let header of headers">{{data[header?.name]}}</td>\n    </tr>\n  </table>\n</div>\n\n<div *ngIf="tableScroll" class=" example-container mat-elevation-z8">\n  <table mat-table [dataSource]="datas" >\n    <ng-container [matColumnDef]="column" *ngFor="let column of displayedColumns ; let index = index" [sticky]="index == 0">\n      <th mat-header-cell *matHeaderCellDef class="border"> <div class="padding "> {{column}}</div> </th>\n      <td mat-cell *matCellDef="let element" class="border"><div class="padding "> {{element[column]}}</div> </td>\n    </ng-container>\n  \n    <tr mat-header-row *matHeaderRowDef="displayedColumns ; sticky: true"></tr>\n    <tr mat-row *matRowDef="let row; columns: displayedColumns;"></tr>\n  </table>\n  \n</div>',styles:[".customTable{border-collapse:collapse;border-spacing:0;width:100%;border:1px solid #ddd;margin-top:20px;overflow:auto}.customTable td,.customTable th{text-align:left;padding:10px}.customTable .fixed{position:absolute;float:left}.customTable tr:nth-child(even){background-color:#f2f2f2}.customTable .marginChart{margin:50px 0}.customTable .capitalize{text-transform:capitalize;font-size:12px!important}.example-container{max-height:600px;width:100%;overflow:auto}td.mat-column-star{width:20px;padding-right:8px}td.mat-column-position,th.mat-column-position{padding:8px;text-align:center}.border{border-right:1px solid #e0e0e0}.padding{padding:15px;text-align:center}"]}]}],t.ctorParameters=function(){return[]},t.propDecorators={headers:[{type:h.Input}],datas:[{type:h.Input}],tableScroll:[{type:h.Input}]},t}(),rt=function(){function t(){this.graphData={}}return t.prototype.ngOnInit=function(){this.createGraphObj()},t.prototype.createGraphObj=function(){this.graphData.chartType=this.configs.chartType,this.graphData.data=this.datas.map(function(t){return Object.values(t)}),this.graphData.data.forEach(function(t){}),this.graphData.options=this.configs.chartOptions;var t=Object.keys(this.datas[0]);this.graphData.columnNames=t.map(function(t){return(new G).transform(t)}),this.graphData.options.legend={maxLines:2},10<this.graphData.data.length&&Object.assign(this.graphData.options.hAxis,{textPosition:"none"})},t.decorators=[{type:h.Component,args:[{selector:"app-column-graph",template:'\x3c!-- <google-chart class="marginChart" [options]="graphData.chartOptions" style="width : 100%; height: 100%;"\n  [title]="graphData.title" [data]="graphData.data" [type]="graphData.chartType" [columnNames]="graphData.columnNames">\n</google-chart> --\x3e\n<div *ngIf="graphData">\n  <div class="_flex-box _justify-content-center">\n    <h4>{{configs?.title}}</h4>\n  </div >\n  <div class="_flex-box _justify-content-center subTitle"> {{configs?.subTitle}}</div>\n  <div class="_full-width">\n    <google-chart class="marginChart" style="width : 100%; min-height: 500px;" [options]="graphData[\'options\']"\n      [title]="graphData[\'title\']" [data]="graphData[\'data\']" [type]="graphData[\'chartType\']"\n      [columnNames]="graphData[\'columnNames\']">\n    </google-chart>\n  </div>\n</div>',styles:[".subTitle{color:var(--grey-color)}"]}]}],t.ctorParameters=function(){return[]},t.propDecorators={datas:[{type:h.Input}],configs:[{type:h.Input}]},t}(),ot=function(){function t(t,e){this.dialogRef=t,this.data=e,this.sharLink=e}return t.prototype.onNoClick=function(){this.dialogRef.close()},t.prototype.copyLink=function(t){t.select(),document.execCommand("copy"),t.setSelectionRange(0,0)},t.decorators=[{type:h.Component,args:[{selector:"share-link-view",template:'\x3c!-- <h1 mat-dialog-title>Hi {{data.name}}</h1>\n<div mat-dialog-content>\n  <p>What\'s your favorite animal?</p>\n  <mat-form-field>\n    <input matInput [(ngModel)]="data.animal">\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)="onNoClick()">No Thanks</button>\n  <button mat-button [mat-dialog-close]="data.animal" cdkFocusInitial>Ok</button>\n</div> --\x3e\n<div class="box col-xs-12">\n\n<div class=" col-xs-12 _noMarginPadding _flex-box _justify-content-space-between">\n  <h1 mat-dialog-title class=" _noMarginPadding ">Sharable Link </h1>\n\n    <button mat-icon-button (click)="onNoClick()">\n        <i class="material-icons">\n            close\n            </i>\n    </button>\n</div> \n<div class="col-xs-12">\n    <mat-form-field class="col-xs-12">\n        <input matInput  value="{{sharLink}}" #link>\n    </mat-form-field>\n</div>\n<div class=" col-xs-12 _flex-box  _flex-end positionBottom">\n    <button mat-raised-button color="primary" (click)="copyLink(link)">\n       Copy\n    </button>\n</div>\n</div>\n',styles:[".box{position:relative;height:150px}.positionBottom{position:absolute;bottom:0}"]}]}],t.ctorParameters=function(){return[{type:y.MatDialogRef},{type:undefined,decorators:[{type:h.Inject,args:[y.MAT_DIALOG_DATA]}]}]},t}(),st=function(){function t(t,e,n,a,i,r){this.dialog=t,this.snackBar=e,this.utility=n,this.router=a,this.route=i,this.apiService=r,this.url={publicURL:"",privateURL:"",reportName:""}}return t.prototype.ngOnInit=function(){console.log(this.publicSharedBaseUrl)},t.prototype.shareLink=function(){var n=this;this.url.privateURL=window.location.href,console.log("shared link"),this.route.url.subscribe(function(t){console.log(t);var e=n.url.privateURL.indexOf(t[0].path);n.url.publicURL=n.publicSharedBaseUrl+n.url.privateURL.slice(e)+"&componentName="+n.componentId,console.log(n.url),n.url.reportName=n.componentId}),this.apiService.post(this.shareLinkApi,this.url).subscribe(function(t){console.log(t),n.uuId=n.publicSharedBaseUrl.substring(0,n.publicSharedBaseUrl.length-1)+"?linkId="+t.result.linkId,n.url.publicURL=n.baseUrl+"/"+n.portalName.toLowerCase()+"/public?linkId="+t.result.linkId,n.openDialog()},function(t){n.utility.loaderHide()})},t.prototype.openDialog=function(){this.dialog.open(ot,{width:"500px",height:"200px",data:this.url.publicURL}).afterClosed().subscribe(function(t){console.log("The dialog was closed")})},t.decorators=[{type:h.Component,args:[{selector:"app-share-link",template:'<span class="_margin-top">\n  \x3c!-- <button mat-raised-button color="primary" (click)="openDialog()">Share Link</button> --\x3e\n  <button mat-icon-button color="primary" (click)="shareLink()">\n    <mat-icon>share</mat-icon>\n  </button>\n</span>',styles:[""]}]}],t.ctorParameters=function(){return[{type:y.MatDialog},{type:y.MatSnackBar},{type:I},{type:d.Router},{type:d.ActivatedRoute},{type:W}]},t.propDecorators={publicSharedBaseUrl:[{type:h.Input}],shareLinkApi:[{type:h.Input}],globalConfig:[{type:h.Input}],componentId:[{type:h.Input}],baseUrl:[{type:h.Input}],portalName:[{type:h.Input}]},t}(),lt=function(){function t(){this.emitResponseType=new h.EventEmitter,this.visible=!0,this.selectable=!0,this.removable=!0,this.addOnBlur=!0,this.separatorKeysCodes=[c.ENTER,c.COMMA],this.listOfChips=[]}return t.prototype.ngOnInit=function(){this.name=this.genericData.field,this.listOfChips=this.genericData.value,console.log("chips")},t.prototype.add=function(t){var e,n=t.input,a=t.value;(a||"").trim()&&this.listOfChips.push(((e={})[this.name]=a.trim(),e)),n&&(n.value="")},t.prototype.remove=function(t){var e=this.listOfChips.indexOf(t);0<=e&&this.listOfChips.splice(e,1)},t.decorators=[{type:h.Component,args:[{selector:"app-chips-field",template:'<div [formGroup]="genericForm" >\n  <mat-form-field class=" col-sm-6 fixSize _halfWidth" *ngIf="genericData.input == \'chips\' ">\n    <mat-chip-list #chipList>\n      <mat-chip *ngFor="let chip of listOfChips" [selectable]="selectable"\n               [removable]="removable" (removed)="remove(chip)">\n        {{chip[genericData.field]}}\n        <mat-icon matChipRemove *ngIf="removable">cancel</mat-icon>\n      </mat-chip>\n      <input placeholder="{{genericData.field}}"\n            formControlName="{{genericData.field}}"\n             [matChipInputFor]="chipList"\n             [matChipInputSeparatorKeyCodes]="separatorKeysCodes"\n             [matChipInputAddOnBlur]="addOnBlur"\n             (matChipInputTokenEnd)="add($event)">\n    </mat-chip-list>\n  </mat-form-field>\n</div>',styles:[".space{padding:0 10px}.bold{font-size:15px;font-weight:1000}.right{text-align:right}.fixSize{height:54.6px}"]}]}],t.propDecorators={genericData:[{type:h.Input}],genericForm:[{type:h.Input}],genericEdit:[{type:h.Input}],emitResponseType:[{type:h.Output}]},t}(),pt=function(){function t(){this.emitResponseType=new h.EventEmitter,this.fileSelected=!1}return t.prototype.ngOnInit=function(){},t.prototype.preview=function(t){var e=this;if(0!==t.length)if(this.fileSelected=!0,null!=t[0].type.match(/image\/*/)){var n=new FileReader;this.imagePath=t,n.readAsDataURL(t[0]),n.onload=function(t){e.imgURL=n.result}}else this.message="Only images are supported."},t.decorators=[{type:h.Component,args:[{selector:"app-file-upload-field",template:'<div [formGroup]="genericForm">\n  <div class="col-sm-6 fixSize _halfWidth "> \n    <label for="image-file-upload" class="custom-file-upload _flex-box  _justify-content-center" >\n        <i class="material-icons " *ngIf="!fileSelected" >\n            add \n        </i>\n      <img [src]="imgURL" *ngIf="fileSelected" class="imageBox">\n      <div *ngIf="fileSelected"  id="hoverShow1">\n          <p>{{\'labels.update\'| translate}}</p>\n      </div>\n      \x3c!-- <div>\n        <i class="material-icons paddingContent">\n          cloud_upload\n        </i>\n      </div>\n      <div class="paddingContent">\n        {{\'labels.addImage\'| translate}}\n      </div> --\x3e\n    </label>\n    <input id="image-file-upload" placeholder="{{genericData.label | camelcase}} "\n      formControlName="{{genericData?.field}}" [required]="genericData.validation.required" #file type="file"\n      (change)="preview(file.files);" accept="{{genericData?.requiredType}}">\n    \x3c!-- <div *ngIf="fileSelected" class="_flexBox _justify-content-space-between selectedImage"> --\x3e\n\n      \x3c!-- <img [src]="imgURL" class="imageBox">\n      <i class="material-icons" (click)="file.files = null ;file.value = null ; fileSelected = false">\n        delete\n      </i> --\x3e\n    \x3c!-- </div> --\x3e\n  </div>\n</div>',styles:["input[type=file]{display:none}._flexBox{display:flex!important;align-items:center;justify-content:space-between}.paddingContent{padding:0 10px;white-space:nowrap}.fileList{margin-top:60px}.wrapperCenter{padding:50px;margin:20px 0;background-color:var(--background-color);border-radius:5px}.custom-file-upload{width:150px;height:150px;white-space:nowrap;border:1px solid var(--border-color)}.marginTopBottom{margin:10px 0}.wrapper{padding:0 20px}.custom-file-upload:hover{background-color:var(--primary-color);color:var(--white-color);border:1px solid var(--primary-color)}.selectedImage{width:300px}.imageBox{width:150px;height:150px;position:relative}.custom-file-upload:hover #hoverShow1{display:flex;align-items:center;justify-content:center}.custom-file-upload #hoverShow1{display:none;position:absolute;background-color:rgba(0,0,0,.5);color:var(--white-color);width:150px;height:150px}"]}]}],t.propDecorators={genericData:[{type:h.Input}],genericForm:[{type:h.Input}],genericEdit:[{type:h.Input}],emitResponseType:[{type:h.Output}]},t}(),ct=function(){function t(){}return t.forRoot=function(){return{ngModule:t,providers:[B,x]}},t.decorators=[{type:h.NgModule,args:[{declarations:[Y,_,D,O,C,M,A,E,S,R,F,L,j,nt,k,w,Z,et,tt,it,rt,at,st,ot,lt,pt],imports:[v.CommonModule,u.FormsModule,y.MatChipsModule,y.MatCheckboxModule,u.ReactiveFormsModule,y.MatInputModule,s.MatProgressSpinnerModule,o.MatButtonModule,y.MatDividerModule,r.MatDialogModule,y.MatRadioModule,y.MatTableModule,a.MatSelectModule,d.RouterModule,X,l.MatSnackBarModule,p.NgxSpinnerModule,y.MatCardModule,y.MatTooltipModule,y.MatDatepickerModule,y.MatAutocompleteModule,f.GoogleChartsModule.forRoot(),b.MatIconModule],entryComponents:[D,ot],exports:[at,_,p.NgxSpinnerModule,E,l.MatSnackBarModule,S,R,pt,j,k,nt,Y,w,Z,y.MatTooltipModule,st]}]}],t}(),dt=function(){function t(t){this.apiService=t}return t.prototype.getListOfBlock=function(t,e){return this.apiService.get(t+e)},t.prototype.getListOfentityl=function(t,e,n){return this.apiService.get(t+e+"&blockId="+n)},t.prototype.getEcmReportGetSubmissionId=function(t,e){return this.apiService.get(t+e)},t.prototype.getSubmissionReport=function(t,e){return this.apiService.get(t+e)},t.prototype.getUserentitylsInProgram=function(t,e){return this.apiService.get(t+e)},t.prototype.getSingleEntityReport=function(t,e,n,a,i){return i?this.apiService.get(t+e+"?solutionId="+n+"&entity="+a+"&linkId="+i):this.apiService.get(t+e+"?solutionId="+n+"&entity="+a)},t.prototype.getHighEntityReport=function(t,e,n,a,i){return i?this.apiService.get(t+e+"?solutionId="+n+"&entity="+a+"&linkId="+i):this.apiService.get(t+e+"?solutionId="+n+"&entity="+a)},t.prototype.getMultipleEntityReport=function(t,e,n,a,i,r){var o="";return i.forEach(function(t,e){o+=0===e?i[e]:","+i[e]}),r?this.apiService.get(t+e+"?solutionId="+n+"&entity="+o+"&blockName="+a+"&linkId="+r):this.apiService.get(t+e+"?solutionId="+n+"&entity="+o+"&blockName="+a)},t.prototype.getMultipleEntityDrilldownReport=function(t,e,n,a,i,r){var o="";return i.forEach(function(t,e){o+=0===e?i[e]:","+i[e]}),r?this.apiService.get(t+e+"?solutionId="+n+"&entity="+o+"&blockName="+a+"&linkId="+r):this.apiService.get(t+e+"?solutionId="+n+"&entity="+o+"&blockName="+a)},t.decorators=[{type:h.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:W}]},t.ngInjectableDef=h.defineInjectable({factory:function(){return new t(h.inject(W))},token:t,providedIn:"root"}),t}(),ut=function(){function t(t,e,n,a,i){var r=this;this.apiService=t,this.snackBar=e,this.route=n,this.utility=a,this.router=i,this.headings="headings.reportEntityReport",this.programId=this.router.snapshot.queryParamMap.get("programId"),this.solutionId=this.router.snapshot.queryParamMap.get("solutionId"),this.linkId=this.router.snapshot.queryParamMap.get("linkId"),this.entityId=this.router.snapshot.params.entityId,this.router.data.subscribe(function(t){r.apiBaseUrl=t.apibaseUrl,r.reportConfig=t.reportConfig,r.shareLinkApi=t.shareLinkApi,r.publicSharedBaseUrl=t.publicSharedBaseUrl,r.globalConfig=t.globalConfig,r.componentId=t.componentId,r.baseUrl=t.baseUrl,r.portalName=t.portalName})}return t.prototype.ngOnInit=function(){this.utility.loaderShow(),this.getEntityReport()},t.prototype.setColor=function(){var i=this,r=0,o=[];this.entityResult.forEach(function(t){if("tableGraph"==t.reportType){for(var e=t.graphData.data[0].length,n=1;n<e;){var a=i.getRandomColor();o.includes(a)&&a.includes("#f")||(o.push(a),n++)}i.entityResult[r].graphData.chartOptions.colors=o}r++})},t.prototype.getRandomColor=function(){for(var t="#",e=0;e<6;e++)t+="0123456789ABCDEF"[Math.floor(16*Math.random())];return t},t.prototype.getEntityReport=function(){var e=this;this.apiService.getSingleEntityReport(this.apiBaseUrl+this.reportConfig.singleEntityReport,this.programId,this.solutionId,this.entityId,this.linkId).subscribe(function(t){e.insightReport=t.result,e.utility.loaderHide()},function(t){e.snackBar.open(e.globalConfig.errorMessage,"Ok",{duration:9e3}),e.utility.loaderHide()})},t.prototype.naviagteToRubrics=function(){this.route.navigate(["/report/framework-rubric"],{queryParams:{link:this.insightReport.frameworkUrl.link}})},t.decorators=[{type:h.Component,args:[{selector:"app-entity-report",template:'<app-loader></app-loader>\n\n<app-parent-heading *ngIf="!linkId" [genericHeading]="headings" [startIndex]="3" [showControl]="false"></app-parent-heading>\n\n<div>\n  <div class="_flex-box ">\n    <h4 class="marginTop" style="flex:1">{{\'headings.performanceReport\' | translate}}</h4>\n    <button *ngIf="!linkId" mat-button color="primary"\n      (click)="naviagteToRubrics()">{{\'headings.frameworkRubricView\' | translate}}</button>\n    <app-share-link *ngIf="insightReport?.isShareable && !linkId"\n     [publicSharedBaseUrl]="publicSharedBaseUrl"\n     [componentId]="componentId"\n     [globalConfig]="globalConfig"\n     [baseUrl]="baseUrl"\n     [portalName]="portalName"\n      [shareLinkApi]="shareLinkApi">\n    </app-share-link>\n\n  </div>\n  <div>\n    <mat-card>\n      <mat-list class="middle">\n        <mat-list-item *ngFor="let item of insightReport?.summary;let last = last;">\n          <div class="_flex-box _full-width">\n            <div style="flex:1">\n              {{item?.title}}\n            </div>\n            <div style="flex:2">\n              <b>{{item?.value}}</b>\n            </div>\n          </div>\n          <mat-divider *ngIf="!last"></mat-divider>\n\n        </mat-list-item>\n      </mat-list>\n    </mat-card>\n  </div>\n  \x3c!-- <div class="col-xs-12 _flex-box _flex-end _small-Top-Margin" ></div> --\x3e\n\n  <div class="col-xs-12 marginTop" *ngFor="let section of insightReport?.sections">\n    <mat-card class="containerAdj">\n      <mat-card-title class="title _capitalize">\n        {{section?.heading}}\n      </mat-card-title>\n      \x3c!-- <mat-card-subtitle>\n        \n      </mat-card-subtitle> --\x3e\n      <mat-divider></mat-divider>\n      <mat-card-content>\n        <div class="_flex-box _margin-top _margin-bottom textColor">\n          <span *ngFor="let header of section?.summary; let last = last" class="_flex-box">\n            {{header?.label}} : {{header?.value}}\n            <i class="material-icons" *ngIf="!last">\n              keyboard_arrow_right\n            </i>\n          </span>\n        </div>\n        <app-graph-table-chart [section]="section"></app-graph-table-chart>\n\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n\n</div>',styles:['.paddingTop{padding:20px 0}.paddingBottom{padding:0 0 20px}.marginTop{margin:20px 0;padding:0}.height{height:350px;overflow:hidden}.profileHeight{padding:0;display:flex;align-items:center}.profileIcon{font-size:10vw}.profileContent{padding-left:20px}.flex-box{display:flex;flex-direction:column;justify-content:center;align-items:center;cursor:pointer}.reportDashboard{padding:20px}.wrapper{padding:0 20px}.userIcon{height:200px}.userIcon:after{content:"";background:var(--light-grey-color);position:absolute;top:20%;right:0;height:60%;width:1px}.flexBox{display:flex;flex-direction:column;justify-content:flex-start}.subHeading{color:var(--grey-color);overflow:hidden;text-overflow:ellipsis}.dividerWidth{margin:0 20px;width:calc(100% - 40px)!important}._flexbox{display:flex;align-items:baseline}.horizontalLine{border-bottom:1px solid var(--light-grey-color);width:calc(100% - 20px)!important;padding:0 0 20px}.flex-direction-column{flex-direction:column;display:flex;overflow-x:auto}.flexWarp{flex-wrap:wrap}.middle{padding:0}.containerAdj{padding:15px!important}.title{font-size:18px}.textColor{color:var(--primary-color);text-transform:capitalize}']}]}],t.ctorParameters=function(){return[{type:dt},{type:y.MatSnackBar},{type:d.Router},{type:I},{type:d.ActivatedRoute}]},t.propDecorators={globalConfig:[{type:h.Input}],apiBaseUrl:[{type:h.Input}],reportConfig:[{type:h.Input}]},t}(),gt=function(){function t(t,e,n,a,i){var r=this;this.apiService=t,this.utility=e,this.snackBar=n,this.router=a,this.route=i,this.headings="headings.reportMiltipleEntityReport",this.programId=this.router.snapshot.queryParamMap.get("programId"),this.entityId=this.router.snapshot.params.entityId,this.solutionId=this.router.snapshot.queryParamMap.get("solutionId"),this.linkId=this.router.snapshot.queryParamMap.get("linkId"),this.router.data.subscribe(function(t){r.apiBaseUrl=t.apibaseUrl,r.reportConfig=t.reportConfig,r.shareLinkApi=t.shareLinkApi,r.publicSharedBaseUrl=t.publicSharedBaseUrl,r.globalConfig=t.globalConfig,r.componentId=t.componentId,r.baseUrl=t.baseUrl,r.portalName=t.portalName})}return t.prototype.ngOnInit=function(){this.utility.loaderShow(),this.getHighEntityReport()},t.prototype.getHighEntityReport=function(){var k=this;this.apiService.getHighEntityReport(this.apiBaseUrl+this.reportConfig.highEntityReport,this.programId,this.solutionId,this.entityId,this.linkId).subscribe(function(t){var e,n,a,i,r,o;k.highLevelInsight=t.result;var s=[];try{for(var l=P(k.highLevelInsight.sections[0].subSections[0].data),p=l.next();!p.done;p=l.next()){var c=p.value,d=Object.assign({},c),u=Object.values(d);u.splice(0,1);var g=0;try{for(var m=P(u),h=m.next();!h.done;h=m.next()){g=h.value+g}}catch(x){a={error:x}}finally{try{h&&!h.done&&(i=m["return"])&&i.call(m)}finally{if(a)throw a.error}}var f=Object.keys(d);f.splice(0,1);try{for(var b=P(f),y=b.next();!y.done;y=b.next()){var v=y.value;d[v]=c[v]/g*100}}catch(I){r={error:I}}finally{try{y&&!y.done&&(o=b["return"])&&o.call(b)}finally{if(r)throw r.error}}s.push(d)}}catch(w){e={error:w}}finally{try{p&&!p.done&&(n=l["return"])&&n.call(l)}finally{if(e)throw e.error}}k.highLevelInsight.sections[0].subSections[0].newGraphData=s,k.utility.loaderHide()},function(t){k.utility.loaderHide()})},t.prototype.naviagteToRubrics=function(){this.route.navigate(["/report/framework-rubric"],{queryParams:{link:this.highLevelInsight.frameworkUrl.link}})},t.decorators=[{type:h.Component,args:[{selector:"app-highlevel-entity-report",template:'<app-loader></app-loader>\n\n<app-parent-heading *ngIf="!linkId" [startIndex]="3" [genericHeading]="headings" [showControl]="false"></app-parent-heading>\n\n<div>\n  <div class="_flex-box _justify-content-space-between">\n    <h4 class="marginTop" style="flex:1">{{\'headings.performanceReport\' | translate}}</h4>\n    <button *ngIf="!linkId" mat-button color="primary"\n      (click)="naviagteToRubrics()">{{\'headings.frameworkRubricView\' | translate}}</button>\n      <app-share-link *ngIf="highLevelInsight?.isShareable && !linkId" \n     [portalName]="portalName"\n\n       [baseUrl]="baseUrl" [componentId]="componentId" [globalConfig]="globalConfig" [publicSharedBaseUrl]="publicSharedBaseUrl" [shareLinkApi]="shareLinkApi"></app-share-link>\n  </div>\n  <div>\n    <mat-card>\n      <mat-list class="middle">\n        <mat-list-item *ngFor="let item of highLevelInsight?.summary;let last = last;">\n          <div class="_flex-box _full-width">\n            <div style="flex:1">\n              {{item?.title}}\n            </div>\n            <div style="flex:2">\n              <b>{{item?.value}}</b>\n            </div>\n          </div>\n          <mat-divider *ngIf="!last"></mat-divider>\n\n        </mat-list-item>\n      </mat-list>\n    </mat-card>\n  </div>\n  <div class="col-xs-12 _flex-box _flex-end _small-Top-Margin" ></div>\n\n  <div class="col-xs-12 marginTop" *ngFor="let section of highLevelInsight?.sections">\n    <mat-card class="containerAdj">\n      <mat-card-title class="title _capitalize">\n        {{section?.heading}}\n      </mat-card-title>\n\n      <mat-divider *ngIf="section?.heading"></mat-divider>\n      <mat-card-content>\n        \x3c!-- <h3 class="_full-width textColor" > Summary</h3> --\x3e\n\n        <div class="_flex-box  _justify-content-center _margin-top _margin-bottom ">\n          <mat-list class="halfContainer" *ngIf="section?.summary?.length">\n            <mat-list-item role="listitem">\n              <h5>Summary</h5>\n              <mat-divider></mat-divider>\n            </mat-list-item>\n            <mat-list-item *ngFor="let header of section?.summary; let last = last" class="_flex-box" role="listitem">\n\n              <div class="_flex-box _full-width">\n                <div style="flex:3" class="smallFont">\n                  {{header?.label}}\n                </div>\n                <div style="flex:1" class="_flex-box _justify-content-center">\n                  <b>{{header?.value}}</b>\n                </div>\n              </div>\n              <mat-divider *ngIf="!last"></mat-divider>\n            </mat-list-item>\n          </mat-list>\n        </div>\n        <app-graph-table-chart [section]="section"></app-graph-table-chart>\n\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n\n</div>',styles:['.paddingTop{padding:20px 0}.paddingBottom{padding:0 0 20px}.marginTop{margin:20px 0;padding:0}.height{height:350px;overflow:hidden}.profileHeight{padding:0;display:flex;align-items:center}.profileIcon{font-size:10vw}.profileContent{padding-left:20px}.flex-box{display:flex;flex-direction:column;justify-content:center;align-items:center;cursor:pointer}.reportDashboard{padding:20px}.wrapper{padding:0 20px}.userIcon{height:200px}.userIcon:after{content:"";background:var(--light-grey-color);position:absolute;top:20%;right:0;height:60%;width:1px}.flexBox{display:flex;flex-direction:column;justify-content:flex-start}.subHeading{color:var(--grey-color);overflow:hidden;text-overflow:ellipsis}.dividerWidth{margin:0 20px;width:calc(100% - 40px)!important}._flexbox{display:flex;align-items:baseline}.horizontalLine{border-bottom:1px solid var(--light-grey-color);width:calc(100% - 20px)!important;padding:0 0 20px}.flex-direction-column{flex-direction:column;display:flex;overflow-x:auto}.flexWarp{flex-wrap:wrap}.middle{padding:0}.containerAdj{padding:15px!important}.title{font-size:18px}.textColor{color:var(--primary-color);text-transform:capitalize}.halfContainer{min-width:350px;width:50%;border:1px solid var(--light-grey-color)}.smallFont{font-size:14px}']}]}],t.ctorParameters=function(){return[{type:dt},{type:I},{type:y.MatSnackBar},{type:d.ActivatedRoute},{type:d.Router}]},t.propDecorators={globalConfig:[{type:h.Input}],reportConfig:[{type:h.Input}],apiBaseUrl:[{type:h.Input}]},t}(),mt=function(){function t(t,e,n,a,i){this.reportService=t,this.utility=e,this.snackBar=n,this.route=a,this.router=i,this.headings="heading.reportMultilpeEntityDrillldownReport",this.url="PROGID01?entity="}return t.prototype.ngOnInit=function(){var e=this;this.utility.loaderShow(),this.router.queryParams.subscribe(function(t){e.entityId=t.entity,e.programId=t.programId,e.blockName=t.blockName,e.linkId=t.linkId,e.solutionId=t.solutionId}),this.router.data.subscribe(function(t){e.apiBaseUrl=t.apibaseUrl,e.reportConfig=t.reportConfig,e.shareLinkApi=t.shareLinkApi,e.publicSharedBaseUrl=t.publicSharedBaseUrl,e.globalConfig=t.globalConfig,e.componentId=t.componentId,e.baseUrl=t.baseUrl,e.portalName=t.portalName}),this.getMultiEntityDrillReport()},t.prototype.getMultiEntityDrillReport=function(){var e=this;this.reportService.getMultipleEntityDrilldownReport(this.apiBaseUrl+this.reportConfig.multiEntityDrillDownLevelReport,this.programId,this.solutionId,this.blockName,this.entityId,this.linkId).subscribe(function(t){e.mutipleEntity=t.result,e.createNewData(),console.log(e.mutipleEntity),e.utility.loaderHide()},function(t){e.utility.loaderHide()})},t.prototype.createNewData=function(){var a=this;this.mutipleEntity.sections.forEach(function(t,n){t.subSections.forEach(function(t,e){a.mutipleEntity.sections[n].subSections[e].tableScroll=!0})})},t.prototype.naviagteToRubrics=function(){this.route.navigate(["/report/framework-rubric"],{queryParams:{link:this.mutipleEntity.frameworkUrl.link}})},t.decorators=[{type:h.Component,args:[{selector:"app-multiple-entity-drilldown-report",template:'<app-loader></app-loader>\n\n<app-parent-heading *ngIf="!linkId" [startIndex]="3" [genericHeading]="headings" [showControl]="false"></app-parent-heading>\n\n<div>\n  <div class="_flex-box _full-width">\n    <h4 class="marginTop" style="flex:1">{{mutipleEntity?.heading}}</h4>\n    <button mat-button color="primary" *ngIf="!linkId" (click)="naviagteToRubrics()">{{\'headings.frameworkRubricView\' | translate}}\n    </button>\n    <app-share-link *ngIf="mutipleEntity?.isShareable && !linkId"[portalName]="portalName" [baseUrl]="baseUrl" [componentId]="componentId" [globalConfig]="globalConfig" [publicSharedBaseUrl]="publicSharedBaseUrl" [shareLinkApi]="shareLinkApi"></app-share-link>\n  </div>\n  <div>\n    <mat-card>\n      <mat-list class="middle">\n        <mat-list-item *ngFor="let item of mutipleEntity?.summary;let last = last;">\n          <div class="_flex-box _full-width">\n            <div style="flex:1">\n              {{item?.label}}\n            </div>\n            <div style="flex:2">\n              <b>{{item?.value}}</b>\n            </div>\n          </div>\n          <mat-divider *ngIf="!last"></mat-divider>\n\n        </mat-list-item>\n      </mat-list>\n    </mat-card>\n  </div>\n  \x3c!-- <div class="col-xs-12 _flex-box _flex-end _small-Top-Margin" ><app-share-link></app-share-link></div> --\x3e\n\n  <div class="col-xs-12 marginTop" *ngFor="let section of mutipleEntity?.sections">\n    <mat-card class="containerAdj">\n      <mat-card-title class="title _capitalize">\n        {{section?.heading}}\n      </mat-card-title>\n      \x3c!-- <mat-card-subtitle>\n        \n      </mat-card-subtitle> --\x3e\n      <mat-divider></mat-divider>\n      <mat-card-content>\n        <div class="_flex-box _margin-top _margin-bottom textColor">\n          <span *ngFor="let header of section?.summary; let last = last" class="_flex-box">\n            {{header?.label}} : {{header?.value}}\n            <i class="material-icons" *ngIf="!last">\n              keyboard_arrow_right\n            </i>\n          </span>\n        </div>\n        <app-graph-table-chart [section]="section"></app-graph-table-chart>\n\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n\n</div>',styles:['.paddingTop{padding:20px 0}.paddingBottom{padding:0 0 20px}.marginTop{margin:20px 0;padding:0}.height{height:350px;overflow:hidden}.profileHeight{padding:0;display:flex;align-items:center}.profileIcon{font-size:10vw}.profileContent{padding-left:20px}.flex-box{display:flex;flex-direction:column;justify-content:center;align-items:center;cursor:pointer}.reportDashboard{padding:20px}.wrapper{padding:0 20px}.userIcon{height:200px}.userIcon:after{content:"";background:var(--light-grey-color);position:absolute;top:20%;right:0;height:60%;width:1px}.flexBox{display:flex;flex-direction:column;justify-content:flex-start}.subHeading{color:var(--grey-color);overflow:hidden;text-overflow:ellipsis}.dividerWidth{margin:0 20px;width:calc(100% - 40px)!important}._flexbox{display:flex;align-items:baseline}.horizontalLine{border-bottom:1px solid var(--light-grey-color);width:calc(100% - 20px)!important;padding:0 0 20px}.flex-direction-column{flex-direction:column;display:flex;overflow-x:auto}.flexWarp{flex-wrap:wrap}.middle{padding:0}.containerAdj{padding:15px!important}.title{font-size:18px}.textColor{color:var(--primary-color);text-transform:capitalize}']}]}],t.ctorParameters=function(){return[{type:dt},{type:I},{type:y.MatSnackBar},{type:d.Router},{type:d.ActivatedRoute}]},t.propDecorators={reportConfig:[{type:h.Input}],apiBaseUrl:[{type:h.Input}]},t}(),ht=function(){function t(t,e,n,a,i){this.reportService=t,this.utility=e,this.snackBar=n,this.route=a,this.router=i,this.headings="heading.reportMiltipleEntityReport",this.url="PROGID01?entity="}return t.prototype.ngOnInit=function(){var e=this;this.utility.loaderShow(),this.router.queryParams.subscribe(function(t){e.entityId=t.entity,e.programId=t.programId,e.blockName=t.blockName,e.linkId=t.linkId,e.solutionId=t.solutionId}),this.router.data.subscribe(function(t){e.apiBaseUrl=t.apibaseUrl,e.reportConfig=t.reportConfig,e.componentId=t.componentId,e.shareLinkApi=t.shareLinkApi,e.publicSharedBaseUrl=t.publicSharedBaseUrl,e.globalConfig=t.globalConfig,e.baseUrl=t.baseUrl,e.portalName=t.portalName}),this.getMultiEntityReport()},t.prototype.getMultiEntityReport=function(){var e=this;this.reportService.getMultipleEntityReport(this.apiBaseUrl+this.reportConfig.multiEntityHighLevelReport,this.programId,this.solutionId,this.blockName,this.entityId,this.linkId).subscribe(function(t){e.mutipleEntity=t.result,e.createNewData(),console.log(e.mutipleEntity),e.utility.loaderHide()},function(t){e.utility.loaderHide()})},t.prototype.createNewData=function(){var C=this;this.mutipleEntity.sections.forEach(function(t,D){t.subSections.forEach(function(t,e){var n,a,i,r,o,s,l=[];try{for(var p=P(C.mutipleEntity.sections[D].subSections[e].data),c=p.next();!c.done;c=p.next()){var d=c.value,u=Object.assign({},d),g=Object.values(u);g.splice(0,1);var m=0;try{for(var h=P(g),f=h.next();!f.done;f=h.next()){m=f.value+m}}catch(I){i={error:I}}finally{try{f&&!f.done&&(r=h["return"])&&r.call(h)}finally{if(i)throw i.error}}var b=Object.keys(u);b.splice(0,1);try{for(var y=P(b),v=y.next();!v.done;v=y.next()){var x=v.value;u[x]=d[x]/m*100}}catch(w){o={error:w}}finally{try{v&&!v.done&&(s=y["return"])&&s.call(y)}finally{if(o)throw o.error}}l.push(u)}}catch(k){n={error:k}}finally{try{c&&!c.done&&(a=p["return"])&&a.call(p)}finally{if(n)throw n.error}}C.mutipleEntity.sections[D].subSections[e].newGraphData=l})})},t.prototype.naviagteToRubrics=function(){this.route.navigate(["/report/framework-rubric"],{queryParams:{link:this.mutipleEntity.frameworkUrl.link}})},t.decorators=[{type:h.Component,args:[{selector:"app-multiple-entity-report",template:'<app-loader></app-loader>\n\n<app-parent-heading *ngIf="!linkId" [startIndex]="3" [genericHeading]="headings" [showControl]="false"></app-parent-heading>\n\n<div>\n  <div class="_flex-box ">\n    <h4 class="marginTop" style="flex:1">{{\'headings.performanceReport\' | translate}}</h4>\n    <button mat-button *ngIf="!linkId" color="primary"\n      (click)="naviagteToRubrics()">{{\'headings.frameworkRubricView\' | translate}}</button>\n      <app-share-link *ngIf="mutipleEntity?.isShareable && !linkId"  [portalName]="portalName"[baseUrl]="baseUrl" [componentId]="componentId" [globalConfig]="globalConfig" [publicSharedBaseUrl]="publicSharedBaseUrl" [shareLinkApi]="shareLinkApi"></app-share-link>\n\n  </div>\n  <div>\n    <mat-card>\n      <mat-list class="middle">\n        <mat-list-item *ngFor="let item of mutipleEntity?.summary;let last = last;">\n          <div class="_flex-box _full-width">\n            <div style="flex:1">\n              {{item?.label}}\n            </div>\n            <div style="flex:2">\n              <b>{{item?.value}}</b>\n            </div>\n          </div>\n          <mat-divider *ngIf="!last"></mat-divider>\n\n        </mat-list-item>\n      </mat-list>\n    </mat-card>\n  </div>\n  \x3c!-- <div class="col-xs-12 _flex-box _flex-end _small-Top-Margin" ><app-share-link></app-share-link></div> --\x3e\n\n  <div class="col-xs-12 marginTop" *ngFor="let section of mutipleEntity?.sections">\n    <mat-card class="containerAdj">\n      <mat-card-title class="title _capitalize">\n        {{section?.heading}}\n      </mat-card-title>\n      \x3c!-- <mat-card-subtitle>\n        \n      </mat-card-subtitle> --\x3e\n      <mat-divider></mat-divider>\n      <mat-card-content>\n        <div class="_flex-box _margin-top _margin-bottom textColor">\n          <span *ngFor="let header of section?.summary; let last = last" class="_flex-box">\n            {{header?.label}} : {{header?.value}}\n            <i class="material-icons" *ngIf="!last">\n              keyboard_arrow_right\n            </i>\n          </span>\n        </div>\n        <app-graph-table-chart [section]="section"></app-graph-table-chart>\n\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n\n</div>',styles:['.paddingTop{padding:20px 0}.paddingBottom{padding:0 0 20px}.marginTop{margin:20px 0;padding:0}.height{height:350px;overflow:hidden}.profileHeight{padding:0;display:flex;align-items:center}.profileIcon{font-size:10vw}.profileContent{padding-left:20px}.flex-box{display:flex;flex-direction:column;justify-content:center;align-items:center;cursor:pointer}.reportDashboard{padding:20px}.wrapper{padding:0 20px}.userIcon{height:200px}.userIcon:after{content:"";background:var(--light-grey-color);position:absolute;top:20%;right:0;height:60%;width:1px}.flexBox{display:flex;flex-direction:column;justify-content:flex-start}.subHeading{color:var(--grey-color);overflow:hidden;text-overflow:ellipsis}.dividerWidth{margin:0 20px;width:calc(100% - 40px)!important}._flexbox{display:flex;align-items:baseline}.horizontalLine{border-bottom:1px solid var(--light-grey-color);width:calc(100% - 20px)!important;padding:0 0 20px}.flex-direction-column{flex-direction:column;display:flex;overflow-x:auto}.flexWarp{flex-wrap:wrap}.middle{padding:0}.containerAdj{padding:15px!important}.title{font-size:18px}.textColor{color:var(--primary-color);text-transform:capitalize}']}]}],t.ctorParameters=function(){return[{type:dt},{type:I},{type:y.MatSnackBar},{type:d.Router},{type:d.ActivatedRoute}]},t.propDecorators={apiBaseUrl:[{type:h.Input}],reportConfig:[{type:h.Input}]},t}(),ft=function(){function t(t){this.apiService=t}return t.prototype.applyFilters=function(t){return this.apiService.get(t)},t.prototype.getUserSummary=function(t){return this.apiService.get(t)},t.prototype.getEntityReport=function(t){return this.apiService.get(t)},t.prototype.getAssessorReport=function(t){return this.apiService.get(t)},t.prototype.getUserProfileSummary=function(t){return this.apiService.get(t)},t.decorators=[{type:h.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:W}]},t.ngInjectableDef=h.defineInjectable({factory:function(){return new t(h.inject(W))},token:t,providedIn:"root"}),t}(),bt=function(){function t(t,e,n,a,i,r){var o=this;this.router=t,this.route=e,this._fb=n,this.operationService=a,this.utility=i,this.snackBar=r,this.reportGenerate=!1,this.entityPageIndex=0,this.assessorPageIndex=0,this.headings="headings.opsReport",this.maxDate=new Date,this.queryParamsUrl="",this.searchEntityValue="",this.searchAssessorName="",this.itemsPerPage=[10,15,20],this.searchParam="",this.pageReload=!0,this.summaryGraph={},this.entityPageLimit=10,this.assessorPageLimit=10,this.expandedFilters=!0,this.currentRouterUrl="",this.queryParamsRouterUrl="",this.route.data.subscribe(function(t){o.apiBaseUrl=t.apibaseUrl,o.reportConfig=t.reportConfig,o.shareLinkApi=t.shareLinkApi,o.publicSharedBaseUrl=t.publicSharedBaseUrl,o.globalConfig=t.globalConfig,o.noAssess=t.noAssess,o.componentId=t.componentId,o.hostUrl=t.apibaseUrl,o.baseUrl=t.baseUrl,o.portalName=t.portalName}),this.filterForm=this._fb.group({formDate:["",u.Validators.required],toDate:["",u.Validators.required]})}return t.prototype.pdf=function(i){var t=document.getElementById(i);m(t).then(function(t){var e=208*t.height/t.width,n=t.toDataURL("image/png"),a=new g("p","mm","a4");a.addImage(n,"PNG",0,0,208,e),a.save(i+".pdf")})},t.prototype.ngOnInit=function(){var n=this;this.currentRouterUrl=window.location.href,this.route.queryParams.subscribe(function(t){var e=Object.assign({},t);n.pageParam=t,console.log(t),n.utility.loaderShow(),n.linkId=t.linkId,n.getUserProfile(t.solutionId),n.filters(t.solutionId),n.applyFilter(n.pageParam),n.urlQueryParams=Object.assign({},t),delete e.solutionId,Object.keys(e).length?(n.generateReport(e),n.expandedFilters=!1):(n.filterForm.reset(),n.expandedFilters=!0,n.reportGenerate=!1,n.assessorReport=[],n.entityReport=[],n.summaryData={})})},t.prototype.filterApply=function(t){var e,n;if("reset"===t){this.filterForm.reset(),this.reportGenerate=!1,this.filterArray=[];var a=Object.keys(this.urlQueryParams),i={};try{for(var r=P(a),o=r.next();!o.done;o=r.next()){i[o.value]=null}}catch(l){e={error:l}}finally{try{o&&!o.done&&(n=r["return"])&&n.call(r)}finally{if(e)throw e.error}}i.solutionId=this.pageParam.solutionId,this.applyFilter(i)}else{for(var s in this.pageReload=!1,this.expandedFilters=!this.expandedFilters,this.filterObject=this.filterForm.getRawValue(),this.filterObject)null!==this.filterObject[s]&&this.filterObject[s]!==undefined&&""!==this.filterObject[s]&&"aN-aN-NaN"!==this.filterObject[s]||delete this.filterObject[s];this.filterObject.toDate&&(this.filterObject.toDate=this.applyDate(this.filterObject.toDate)),this.filterObject.fromDate&&(this.filterObject.fromDate=this.applyDate(this.filterObject.fromDate)),this.applyFilter(this.filterObject),this.filterArray=Object.entries(this.filterObject)}},t.prototype.mapGraphObject=function(r,t){var o=this;if(void 0===t&&(t="call"),"call"===t)return r.forEach(function(a,i){console.log(a);for(var t=0;t<a.graphData.length;t++){var e=o.getData(a,t);Object.assign(r[i].graphData[t],{data:e}),Object.assign(r[i].graphData[t].chartOptions,{legend:{position:"top",alignment:"end"}})}a.graphData.forEach(function(t,e){2<a.graphData[e].data.length&&"ColumnChart"===a.graphData[e].chartType&&Object.assign(r[i].graphData[e].chartOptions,{isStack:!0}),10<r[i].graphData[e].data.length&&Object.assign(r[i].graphData[e].chartOptions.hAxis,{textPosition:"none"});var n=[];r[i].graphData[e].columnNames.forEach(function(t){n.push((new G).transform(t))}),Object.assign(r[i].graphData[e],{columnNames:n})}),(new G).transform("entityList");var n=o.getTableHeader(a);Object.assign(r[i],{tableHeader:n})}),r;for(var e=0;e<r.graphData.length;e++){var n=this.getData(r,e);Object.assign(r.graphData[e],{data:n}),Object.assign(r.graphData[e].chartOptions,{legend:{position:"top",alignment:"end"}})}r.graphData.forEach(function(t,e){2<r.graphData[e].data.length&&"ColumnChart"===r.graphData[e].chartType&&Object.assign(r.graphData[e].chartOptions,{isStack:!0}),10<r.graphData[e].data.length&&Object.assign(r.graphData[e].chartOptions.hAxis,{textPosition:"none"});var n=[];r.graphData[e].columnNames.forEach(function(t){n.push((new G).transform(t))}),Object.assign(r.graphData[e],{columnNames:n})}),(new G).transform("entityList");var a=this.getTableHeader(r);return Object.assign(r,{tableHeader:a}),console.log(r.graphData),r.graphData},t.prototype.getTableHeader=function(t){var e=[];return t.tabularData.headers.forEach(function(t){e.push(t.name)}),e},t.prototype.getData=function(t,e){for(var n=[],a=0;a<t.data.length;a++){var i=this.getColumn(t,e,a);n.push(i)}return n},t.prototype.getUserProfile=function(t){var a=this;this.operationService.getUserProfileSummary(this.apiBaseUrl+this.reportConfig.profileSummary+t).subscribe(function(t){a.summaryProfileData=t.result;var e,n;a.summaryProfileData=(e=a.summaryProfileData,n="label",e.reduce(function(t,e){return t[e[n]]=e,t},{})),a.noAssess&&a.utility.loaderHide()},function(t){a.utility.loaderHide()})},t.prototype.getColumn=function(n,t,a){var i=[];return n.graphData[t].columnNames.forEach(function(t,e){t=t.trim(),0<e?""===n.data[a][t]?i.push(0):i.push(Math.round(n.data[a][t])):i.push(n.data[a][t])}),i},t.prototype.applyDate=function(t){var e=new Date(t),n=("0"+(e.getMonth()+1)).slice(-2);return[("0"+e.getDate()).slice(-2),n,e.getFullYear()].join("-")},t.prototype.applyFilter=function(t){var e={queryParams:t,relativeTo:this.route,queryParamsHandling:"merge"};this.router.navigate([],e)},t.prototype.inputChange=function(t,e){var n;this.applyFilter(((n={})[t]=e.target.value,n)),"entityId"==t&&(this.searchEntityId=e.target.value)},t.prototype.selectType=function(t,e){var n;this.applyFilter(((n={})[t]=e,n))},t.prototype.generateReport=function(n){var a=this;this.queryParamsUrl=this.pageParam.solutionId+"?";var t=Object.keys(n);t.includes("componentName")&&t.splice(t.indexOf("componentName"),1),t.includes("solutionId")&&t.splice(t.indexOf("solutionId"),1),t.forEach(function(t,e){a.queryParamsUrl+=e?"&"+t+"="+n[t]:t+"="+n[t]}),this.reportGenerate=!0,console.log("generate report"),this.reportsDataFetch()},t.prototype.downloadCsv=function(e){var n=this;"entity"===e?this.operationService.getEntityReport(this.apiBaseUrl+this.reportConfig.entityReport+this.pageParam.solutionId+"?fromDate="+this.pageParam.fromDate+"&toDate="+this.pageParam.toDate+"&csv="+!0).subscribe(function(t){},function(t){n.download(t,e)}):"assessor"===e&&this.operationService.getAssessorReport(this.apiBaseUrl+this.reportConfig.assessorReport+this.pageParam.solutionId+"?fromDate="+this.pageParam.fromDate+"&toDate="+this.pageParam.toDate+"&csv="+!0).subscribe(function(t){},function(t){n.download(t,e)})},t.prototype.download=function(t,e){if(200==t.status){var n=new Blob([t.error.text],{type:"csv"}),a=window.URL.createObjectURL(n),i=document.createElement("a");i.href=a,i.download=e+"-Report.csv",document.body.appendChild(i),i.click(),document.body.removeChild(i),window.URL.revokeObjectURL(a)}else this.snackBar.open(this.globalConfig.errorMessage,"Ok",{duration:9e3})},t.prototype.setSearchParam=function(t,e,n){void 0===t&&(t=1),void 0===e&&(e=this.itemsPerPage[0]);var a="&page="+t+"&limit="+e;return a+="entity"===n?"&entityName="+this.searchEntityValue:"&assessorName="+this.searchAssessorName},t.prototype.pageResponse=function(t){this[t.label+"PageLimit"]=t.pageLimit,this[t.label+"PageIndex"]=t.pageIndex,console.log(t),this.searchParam=this.setSearchParam(this[t.label+"PageIndex"]+1,this[t.label+"pageLimit"],t.label),"entity"===t.label?this.getEntityReport():this.getAssessorReport()},t.prototype.reportsDataFetch=function(){this.utility.loaderShow(),this.getUserSummary(this.queryParamsUrl),this.searchParam=this.setSearchParam(this.entityPageIndex+1,this.entityPageLimit,"entity"),this.getEntityReport(),this.searchParam=this.setSearchParam(this.assessorPageIndex+1,this.assessorPageLimit,"assessor"),this.getAssessorReport()},t.prototype.filters=function(t){var n=this;this.pageParam.linkId||this.operationService.applyFilters(this.apiBaseUrl+this.reportConfig.reportFilter+t).subscribe(function(t){for(var e in n.filterData=n.mapQueryParams(t.result),n.filterForm=n.utility.toGroup(n.filterData),n.filterObject=n.filterForm.getRawValue(),n.filterObject)null!==n.filterObject[e]&&n.filterObject[e]!==undefined&&""!==n.filterObject[e]&&"aN-aN-NaN"!==n.filterObject[e]||delete n.filterObject[e];n.filterArray=Object.entries(n.filterObject),n.utility.loaderHide()},function(t){n.snackBar.open(n.globalConfig.errorMessage,"Ok",{duration:9e3}),n.utility.loaderHide()})},t.prototype.mapQueryParams=function(i){var r;return this.route.queryParams.subscribe(function(t){r=t}),Object.keys(r).forEach(function(a){i.forEach(function(t,e){if(t.field===a)if("date"===t.input){var n=[r[a].substring(6),r[a].substring(3,5),r[a].substring(0,2)].join("-");i[e].value=n+"T00:00:00.000Z"}else i[e].value=r[a]})}),i},t.prototype.getUserSummary=function(t){var a=this;this.operationService.getUserSummary(this.apiBaseUrl+this.reportConfig.reportSummary+t).subscribe(function(t){a.summaryData=t.result;var e,n;a.summaryData=(e=a.summaryData,n="label",e.reduce(function(t,e){return t[e[n]]=e,t},{})),a.utility.loaderHide()},function(t){})},t.prototype.getEntityReport=function(e){var n=this;void 0===e&&(e="call"),this.entityLoading=!0,this.operationService.getEntityReport(this.apiBaseUrl+this.reportConfig.entityReport+this.queryParamsUrl+this.searchParam).subscribe(function(t){n.share=t.result,"call"==e?n.entityReport=n.mapGraphObject(t.result.sections):(n.entityReport[0].data=t.result.sections[0].data,n.entityReport[0].graphData=n.mapGraphObject(t.result.sections[0],"search")),n.entityLoading=!1},function(t){})},t.prototype.getAssessorReport=function(e){var n=this;void 0===e&&(e="call"),this.assessorLoading=!0,this.operationService.getAssessorReport(this.apiBaseUrl+this.reportConfig.assessorReport+this.queryParamsUrl+this.searchParam).subscribe(function(t){"call"==e?n.assessorReport=n.mapGraphObject(t.result.sections):(n.assessorReport[0].data=t.result.sections[0].data,n.assessorReport[0].graphData=n.mapGraphObject(t.result.sections[0],"search")),n.assessorLoading=!1},function(t){})},t.prototype.searchEntityIdInApi=function(t){},t.prototype.searchVal=function(t,e){"entity"==t?this.searchEntityValue=e.target.value:"assessor"==t&&(this.searchAssessorName=e.target.value)},t.prototype.searchInApi=function(t,e){this[t+"+PageIndex"]=1,this.searchParam=this.setSearchParam(this[t+"PageIndex"],this[t+"PageLimit"],t),"entity"===t?(this.searchEntityValue=e,this.getEntityReport("search")):(this.searchAssessorName=e,this.getAssessorReport("search"))},t.decorators=[{type:h.Component,args:[{selector:"app-ops-report",template:'<app-loader></app-loader>\n<div class="_margin-bottom">\n  <app-parent-heading *ngIf="!noAssess" [startIndex]="3" [genericHeading]="headings" [showControl]="false">\n  </app-parent-heading>\n</div>\n<div class="reportDashboard">\n\n  <div class="_flex-box _justify-content-center ">\n\n    <div class="_full-width">\n\n      <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12  _noMarginPadding ">\n        \x3c!-- <mat-card class=" profileHeight col-xs-12 " [formGroup]="filterForm" *ngIf="summaryData">\n\n          <div class="col-xs-12 _flex-box">\n            <div class="col-lg-3 col-md-3 col-sm-4 col-xs-4  _flex-box _justify-content-center  userIcon ">\n              <i class="material-icons profileIcon">\n                account_circle\n              </i>\n            </div>\n            <div class="col-lg-9 col-md-9 col-sm-8 col-xs-8   profileContent  flex-direction-column">\n              <div class="flexBox _justify-content-center">\n                <span>\n                  <h4>{{summaryData.managerName.value |camelcase }} .</h4>\n                </span>\n                <span class="_flex-box _justify-content-space-between horizontalLine flexWarp">\n                  <span class="subHeading col-xs-12 col-md-4 col-lg-4">{{summaryData.role.value | camelcase }} .</span>\n                  <span class="subHeading col-xs-12 col-md-4 col-lg-4"> {{summaryData.email.value  }} .</span>\n                  <span class="subHeading col-xs-12 col-md-4 col-lg-4">{{summaryData.userName.value }} .</span>\n                </span>\n\n              </div>\n              <div class="_flexbox _justify-content-space-between flexWarp">\n                <div class="flexBox _justify-content-center col-xs-12 col-md-4 col-lg-4">\n                  <span>\n                    <h6>{{summaryData.programName.label | camelcase}}</h6>\n                  </span>\n                  <span>\n                    <h6 class="subHeading">{{summaryData.programName.value | camelcase}}</h6>\n                  </span>\n                </div>\n                <div class="flexBox _justify-content-center col-xs-12 col-md-4 col-lg-4">\n                  <span>\n                    <h6>For the period :</h6>\n                  </span>\n                  <span>\n                    <h6 class="subHeading"> - NA - </h6>\n                  </span>\n                </div>\n                <div class="flexBox _justify-content-center col-xs-12 col-md-4 col-lg-4">\n                  <span>\n                    <h6>{{summaryData.createdDate.label | camelcase}}:</h6>\n                  </span>\n                  <span>\n                    <h6 class="subHeading">{{summaryData.createdDate.value}}</h6>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </mat-card>  --\x3e\n        <div class="_flex-box _justify-content-space-between">\n          <h4 class="marginTop" style="flex:1">Program Operations Report </h4>\n          <app-share-link *ngIf="share?.isShareable && !noAssess" [portalName]="portalName" [baseUrl]="baseUrl"\n            [componentId]="componentId" [publicSharedBaseUrl]="publicSharedBaseUrl" [globalConfig]="globalConfig"\n            [shareLinkApi]="shareLinkApi"></app-share-link>\n        </div>\n\n        \x3c!-- <h4 class="_flex-box  _small-Bottom-Margin"></h4>\n        <div class="col-xs-12 _flex-box _flex-end _small-Top-Margin" *ngIf="reportGenerate && entityReport" >\n          <app-share-link *ngIf="share[\'isShareable\'] && !noAssess" [publicSharedBaseUrl]="publicSharedBaseUrl"  [globalConfig]="globalConfig" [shareLinkApi]="shareLinkApi"></app-share-link>\n        </div> --\x3e\n\n        <mat-card *ngIf="summaryProfileData">\n          <div class="_flexbox _justify-content-space-between flexWarp">\n            <div class="flexBox col-xs-12 col-md-4 col-lg-4 _justify-content-center">\n              <span>\n                <h6 class="_no-wrap">{{summaryProfileData?.nameOfTheProgram?.label | camelcase}} <span\n                    class="_padding-left _padding-right">:</span></h6>\n              </span>\n              <span>\n                <h6 class="subHeading">{{summaryProfileData?.nameOfTheProgram?.value}}</h6>\n              </span>\n            </div>\n            <div class="flexBox  col-xs-12 col-md-4 col-lg-4 _justify-content-center">\n              <span>\n                <h6 class="_no-wrap">{{summaryProfileData?.nameOfTheManager?.label | camelcase}} <span\n                    class="_padding-left _padding-right">:</span></h6>\n              </span>\n              <span>\n                <h6 class="subHeading">{{summaryProfileData.nameOfTheManager?.value | camelcase}}</h6>\n              </span>\n            </div>\n            \x3c!-- <div class="flexBox  col-xs-12 col-md-4 col-lg-4 _justify-content-center">\n                  <span>\n                    <h6 class="_no-wrap">For the period <span class="_padding-left _padding-right">:</span></h6>\n                  </span>\n                  <span>\n                    <h6 class="subHeading"> - NA - </h6>\n                  </span>\n                </div> --\x3e\n\n            <div class="flexBox  col-xs-12 col-md-4 col-lg-4 _justify-content-center">\n              <span>\n                <h6 class="_no-wrap">{{summaryProfileData.dateOfReportGeneration.label | camelcase}} <span\n                    class="_padding-left _padding-right">:</span></h6>\n              </span>\n              <span>\n                <h6 class="subHeading">{{summaryProfileData.dateOfReportGeneration?.value}}</h6>\n              </span>\n            </div>\n\n          </div>\n        </mat-card>\n        <div *ngIf="!noAssess" class="col-xs-12 _noMarginPadding">\n          <mat-accordion class="example-headers-align " #myaccordion="matAccordion">\n\n            <mat-expansion-panel class="marginTop" [expanded]="expandedFilters">\n              <mat-expansion-panel-header (click)=" expandedFilters = !expandedFilters">\n                <span class="_flex-box">\n                  <i class="material-icons _padding-right">\n                    filter_list\n                  </i>\n                  {{\'headings.filters\' | translate}}\n                  <span class="_padding-left">\n                    <mat-chip *ngIf=" filterArray?.length"> {{filterArray?.length }} </mat-chip>\n                    <mat-chip *ngIf="! filterArray?.length"> 0 </mat-chip>\n                  </span>\n                </span>\n              </mat-expansion-panel-header>\n              <div class="marginTop" *ngIf="filterArray">\n                \x3c!-- <mat-chip-list #chipList> --\x3e\n                \x3c!-- <mat-chip *ngFor="let filter of filterArray" [selectable]="selectable"\n                 >\n                  {{filter[0]}} : {{filter[1]}} --\x3e\n                \x3c!-- <mat-chip *ngFor="let filter of filterArray">\n                    <span *ngIf="filter[0] == \'toDate\' || filter[0] == \'fromDate\' ; else no_date"> {{filter[0] | camelcase}} : {{filter[1] | date: \'shortDate\'}}</span>\n                    <ng-template #no_date>{{filter[0] | camelcase}} : {{filter[1]}}</ng-template>\n                  </mat-chip> --\x3e\n\n                \x3c!-- </mat-chip-list> --\x3e\n              </div>\n              <app-dynamic-form [genericData]="filterData" [hostUrl]="hostUrl" [genericForm]="filterForm"\n                [genericEdit]="true">\n              </app-dynamic-form>\n\n              <mat-action-row>\n                <button mat-raised-button (click)="filterApply(\'reset\')">{{\'buttons.reset\'|translate}}</button>\n                <button mat-raised-button color="primary" (click)="filterApply(\'apply\')" class="_margin-left"\n                  [disabled]="!filterForm.valid">{{\'buttons.apply\'|translate}}</button>\n              </mat-action-row>\n            </mat-expansion-panel>\n          </mat-accordion>\n        </div>\n      </div>\n      \x3c!-- <div class="col-xs-12 _flex-box _flex-end _small-Top-Margin" *ngIf="reportGenerate && entityReport" >\n      <app-share-link *ngIf="share[\'isShareable\'] && !noAssess" [publicSharedBaseUrl]="publicSharedBaseUrl"  [globalConfig]="globalConfig" [shareLinkApi]="shareLinkApi"></app-share-link>\n  </div> --\x3e\n\n      <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 _noMarginPadding " [ngClass]="{\'_margin-top\': noAssess}"\n        *ngIf="reportGenerate && summaryData">\n        <mat-card class="_flex-box _justify-content-center col-xs-12">\n          <h4>{{\'headings.summary\' | translate}} </h4>\n          <div class="_flex-box flexWarp">\n            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ">\n              <table>\n                <tr>\n                  <td>{{summaryData?.entitiesAssigned?.label | camelcase}}</td>\n                  <td>{{summaryData?.entitiesAssigned?.value}}</td>\n                </tr>\n                <tr>\n                  <td>{{summaryData?.entitiesCompleted?.label | camelcase}}</td>\n                  <td>{{summaryData?.entitiesCompleted?.value}}</td>\n                </tr>\n                <tr>\n                  <td>{{summaryData?.entitiesInporgress?.label | camelcase}}</td>\n                  <td>{{summaryData?.entitiesInporgress?.value}}</td>\n                </tr>\n                <tr>\n                  <td>{{summaryData?.averageTimeTakenInDays?.label | camelcase}}</td>\n                  <td>{{summaryData?.averageTimeTakenInDays?.value}}</td>\n                </tr>\n              </table>\n            </div>\n            \x3c!-- <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12 marginTop" *ngIf="summaryGraph">\n            <google-chart class="marginChart" [options]="summaryGraph.chartOptions"\n              [title]="summaryGraph.title" style="width : 100%; height: 100%;"\n              [data]="summaryGraph.data" [type]="summaryGraph.chartType"\n              [columnNames]="summaryGraph.chartColumnNames">\n            </google-chart>\n          </div> --\x3e\n          </div>\n        </mat-card>\n      </div>\n\n      <div class="col-lg-12 col-md-22 col-sm-12 col-xs-12 marginTop _noMarginPadding"\n        *ngIf=" reportGenerate && assessorReport">\n        <div *ngFor="let assessorGraph of assessorReport ; let index = index">\n          <mat-card class="flex-direction-column col-xs-12">\n            <h4 class="_flex-box _justify-content-space-between loaderHeight"> {{\'headings.assessorReports\'| translate}}\n              <div *ngIf="assessorLoading">\n                <app-individual-loader></app-individual-loader>\n              </div>\n              <button *ngIf="!noAssess" matSuffix matTooltip="{{\'message.downloadCsv\' | translate}}" mat-icon-button\n              aria-label="Clear" (click)="downloadCsv(\'assessor\')">\n              <i class="material-icons">\n                file_download\n              </i>\n            </button>\n            </h4>\n            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12  _noMarginPadding ">\n              <mat-form-field class=" _full-width">\n                <input matInput appDebounceSearch [searchValue]="searchAssessorName"\n                  (debounceSearch)="searchInApi(\'assessor\'  , $event)" placeholder="{{\'search\'| translate}}"\n                  [debounceTime]="200" (keyup)="searchVal(\'assessor\',$event)">\n                <button mat-button matPrefix mat-icon-button aria-label="Clear">\n                  <i class="material-icons">\n                    search\n                  </i>\n                </button>\n              </mat-form-field>\n            </div>\n            <div *ngIf="assessorGraph.data.length > 0">\n              <table>\n                <tr>\n                  <th *ngFor="let heading of assessorGraph.tabularData.headers">{{heading?.label}}</th>\n                </tr>\n                <tr *ngFor="let assessor of assessorGraph.data">\n                  <td *ngFor="let heading of assessorGraph.tableHeader">{{assessor[heading] | blank}}</td>\n                </tr>\n              </table>\n              <div class=" col-xs-12 _border _small-Top-Margin">\n                <div class=" col-xs-12 _flex-box _flex-end">\n                  <button mat-button (click)="pdf(\'assessorGraph\'+index)">\n                    {{\'message.downloadChart\' | translate}}<i class="material-icons">\n                      file_download\n                    </i>\n                  </button>\n                </div>\n                <div class="col-xs-12" id="assessorGraph{{index}}">\n                  <div *ngFor="let Chart of assessorGraph.graphData">\n\n                    <h4 class="_flex-box _justify-content-center">{{Chart.title}}</h4>\n                    <google-chart class="marginChart" [options]="Chart.chartOptions"\n                      style="width : 100%; min-height: 300px;" [data]="Chart.data" [type]="Chart.chartType"\n                      [columnNames]="Chart.columnNames">\n                    </google-chart>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div *ngIf="!(assessorGraph.data.length > 0)">\n              <div class="middle">\n                {{\'message.noData\' | translate}}\n              </div>\n            </div>\n            <app-pagination [length]="assessorGraph.totalCount" [pageLimit]="assessorPageLimit"\n              [pageIndex]="assessorPageIndex" [itemsPerPage]="itemsPerPage" (paginationResponse)="pageResponse($event)"\n              [paginationLabel]="\'assessor\'"></app-pagination>\n          </mat-card>\n        </div>\n      </div>\n      <div class="col-lg-12 col-md-22 col-sm-12 col-xs-12 marginTop _noMarginPadding"\n        *ngIf="reportGenerate && entityReport">\n        <div *ngFor="let entityGraph of entityReport ; let index = index ">\n          <mat-card class="flex-direction-column col-xs-12 _noMarginPadding">\n            <h4 class="_flex-box _justify-content-space-between loaderHeight"> {{\'headings.schoolReports\'| translate}}\n              <div *ngIf="entityLoading">\n                <app-individual-loader></app-individual-loader>\n              </div>\n              <button *ngIf="!noAssess" mat-button matSuffix matTooltip="{{\'message.downloadCsv\' | translate}}"\n              mat-icon-button aria-label="Clear" (click)="downloadCsv(\'entity\')">\n              <i class="material-icons">\n                file_download\n              </i>\n            </button>\n            </h4>\n            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12  ">\n              <mat-form-field class=" _full-width">\n                <input class="filterInput" matInput appDebounceSearch [searchValue]="searchEntityValue"\n                  [value]="searchEntityValue" (debounceSearch)="searchInApi(\'entity\' , $event)"\n                  placeholder="{{\'search\'| translate}}" [debounceTime]="100" (keyup)="searchVal(\'entity\',$event)">\n                <button mat-button matPrefix mat-icon-button aria-label="Clear">\n                  <i class="material-icons">\n                    search\n                  </i>\n                </button>\n        \n              </mat-form-field>\n            </div>\n            <div *ngIf="entityGraph.data?.length > 0">\n              <table>\n                <tr>\n                  <th *ngFor="let heading of entityGraph.tabularData.headers">{{heading?.label}}</th>\n                </tr>\n                <tr *ngFor="let entity of entityGraph.data">\n                  <td *ngFor="let heading of entityGraph.tableHeader">{{entity[heading] | blank}}</td>\n                </tr>\n              </table>\n              <div class=" col-xs-12 _border _small-Top-Margin">\n                <div class=" col-xs-12 _flex-box _flex-end">\n                  <button mat-button (click)="pdf(\'entityGraph\'+index)">\n                    {{\'message.downloadChart\' | translate}}<i class="material-icons">\n                      file_download\n                    </i>\n                  </button>\n                </div>\n                <div class="col-xs-12" id="entityGraph{{index}}">\n\n                  <div *ngFor="let Chart of entityGraph.graphData">\n                    <h4 class="_flex-box _justify-content-center">{{Chart.title}}</h4>\n\n                    <google-chart class="marginChart" [options]="Chart.chartOptions"\n                      style="width : 100%; min-height: 300px;" [data]="Chart.data" [type]="Chart.chartType"\n                      [columnNames]="Chart.columnNames">\n                    </google-chart>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div *ngIf="!(entityGraph.data?.length > 0)">\n              <div class="middle">\n                {{\'message.noData\' | translate}}\n              </div>\n            </div>\n            <app-pagination [length]="entityGraph.totalCount" [pageLimit]="entityPageLimit"\n              [pageIndex]="entityPageIndex" [itemsPerPage]="itemsPerPage" (paginationResponse)="pageResponse($event)"\n              [paginationLabel]="\'schools\'"></app-pagination>\n          </mat-card>\n        </div>\n      </div>\n\n    </div>\n  </div>',styles:['.paddingTop{padding:20px 0}.paddingBottom{padding:0 0 20px}.padding{padding:0 20px}.marginTop{margin:20px 0!important}.height{height:350px;overflow:hidden}.loaderHeight{height:40px}.profileHeight{padding:0;display:flex;align-items:center;flex-direction:column}.profileIcon{font-size:10vw}.profileContent{padding-left:20px}.flex-box{display:flex;flex-direction:column;justify-content:center;align-items:center;cursor:pointer}.wrapper{padding:0 20px}.userIcon{height:200px}.userIcon:after{content:"";background:var(--light-grey-color);position:absolute;top:20%;right:0;height:60%;width:1px}.flexBox{display:flex;justify-content:flex-start}.subHeading{color:var(--grey-color);overflow:hidden;text-overflow:ellipsis}.dividerWidth{margin:0 20px;width:calc(100% - 40px)!important}._flexbox{display:flex;align-items:baseline}.horizontalLine{border-bottom:1px solid var(--light-grey-color);width:calc(100% - 20px)!important;padding:0 0 20px}.flex-direction-column{flex-direction:column;display:flex;overflow-x:auto}.flexWarp{flex-wrap:wrap}table{border-collapse:collapse;border-spacing:0;width:100%;border:1px solid var(--border-color)}td,th{text-align:left;padding:10px}tr:nth-child(even){background-color:var(--background-color)}.marginChart{margin:50px 0}.middle{display:flex;justify-content:center;padding:20px 0}.loader{border:1px solid var(--black-color);border-top:1px solid var(--primary-color);border-radius:50%;width:10px;height:10px;-webkit-animation:2s linear infinite spin;animation:2s linear infinite spin;margin-left:10px}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}']}]}],t.ctorParameters=function(){return[{type:d.Router},{type:d.ActivatedRoute},{type:u.FormBuilder},{type:ft},{type:I},{type:y.MatSnackBar}]},t.propDecorators={hostUrl:[{type:h.Input}],globalConfig:[{type:h.Input}],filterPanel:[{type:h.ViewChild,args:["myaccordion"]}]},t}(),yt=function(){function t(){}return t.forRoot=function(){return{ngModule:t,providers:[]}},t.decorators=[{type:h.NgModule,args:[{declarations:[ut,gt,mt,ht,bt],imports:[y.MatCardModule,y.MatInputModule,X,v.CommonModule,y.MatDatepickerModule,y.MatNativeDateModule,y.MatChipsModule,y.MatButtonModule,y.MatFormFieldModule,ct,y.MatListModule,y.MatExpansionModule,y.MatDividerModule,f.GoogleChartsModule.forRoot(),b.MatIconModule],entryComponents:[],exports:[ut,gt,mt,ht,bt],providers:[y.MatDatepickerModule]}]}],t}();t.BreadcrumbComponent=w,t.DashboardBlocksComponent=k,t.DialogBoxComponent=D,t.DropdownFieldComponent=C,t.DynamicFormComponent=_,t.FormArrayFieldComponent=L,t.ImageCardComponent=S,t.LoaderComponent=R,t.NumberFieldComponent=M,t.ParentHeadingComponent=E,t.SelectFieldComponent=F,t.TextFieldComponent=O,t.TextareaFieldComponent=A,t.SearchDirective=j,t.ResourceService=B,t.SharedModule=ct,t.CoreModule=X,t.CamelCasePipe=G,t.NoValuePipe=V,t.TranslatePipe=H,t.ApiService=W,t.TranslateService=z,t.UtilityService=I,t.NavbarComponent=N,t.FooterComponent=$,t.ProgramSidenavComponent=q,t.ResponsiveNavbarComponent=T,t.SidenavComponent=U,t.GlobalConfigurationService=Q,t.ProgramsDashboardComponent=Y,t.MinCharacterPipe=K,t.BreadcrumbsService=x,t.PaginationComponent=Z,t.DatePickerComponent=tt,t.IndividualLoaderComponent=nt,t.GraphTableChartComponent=at,t.ShareLinkComponent=st,t.EntityReportComponent=ut,t.HighlevelEntityReportComponent=gt,t.MultipleEntityDrilldownReportComponent=mt,t.MultipleEntityRportComponent=ht,t.OpsReportComponent=bt,t.ReportModule=yt,t.FileUploadComponent=pt,t.ɵf=J,t.ɵh=ft,t.ɵg=dt,t.ɵa=et,t.ɵe=lt,t.ɵc=rt,t.ɵb=it,t.ɵd=ot,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=shikshalokam.umd.min.js.map